2020-04-17 14:29:22,073 -- [Run_test.py-->line:6] - INFO: ---------------开始执行测试用例-----------------------
2020-04-17 14:29:24,285 -- [Run_test.py-->line:24] - INFO: ---------------测试用例执行完毕-----------------------
2020-04-17 14:31:54,417 -- [Run_test.py-->line:7] - INFO: ---------------开始执行测试用例-----------------------
2020-04-17 14:31:56,219 -- [Run_test.py-->line:22] - INFO: ---------------测试用例执行完毕-----------------------
2020-04-17 23:01:45,420 -- [test_register.py-->line:50] - ERROR: 用例--注册成功-用户名包含英文和数字--执行未通过
2020-04-17 23:01:45,420 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '201'}
2020-04-17 23:01:45,420 -- [test_register.py-->line:52] - DEBUG: 实际结果：<Response [405]>
2020-04-17 23:01:45,420 -- [test_register.py-->line:53] - ERROR:  :: 201 != 405
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.3.1\plugins\python\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python3.8.2\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python3.8.2\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: '201' != 405

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    self.assertEqual(expected["status_code"], code)
  File "C:\Program Files\JetBrains\PyCharm 2019.3.1\plugins\python\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 201 != 405
2020-04-17 23:01:45,829 -- [test_register.py-->line:50] - ERROR: 用例--注册成功-用户名包含中文--执行未通过
2020-04-17 23:01:45,829 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '201'}
2020-04-17 23:01:45,829 -- [test_register.py-->line:52] - DEBUG: 实际结果：<Response [405]>
2020-04-17 23:01:45,829 -- [test_register.py-->line:53] - ERROR:  :: 201 != 405
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.3.1\plugins\python\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python3.8.2\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python3.8.2\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: '201' != 405

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    self.assertEqual(expected["status_code"], code)
  File "C:\Program Files\JetBrains\PyCharm 2019.3.1\plugins\python\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 201 != 405
2020-04-17 23:01:46,222 -- [test_register.py-->line:50] - ERROR: 用例--注册成功-用户名为纯英文--执行未通过
2020-04-17 23:01:46,222 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '201'}
2020-04-17 23:01:46,222 -- [test_register.py-->line:52] - DEBUG: 实际结果：<Response [405]>
2020-04-17 23:01:46,222 -- [test_register.py-->line:53] - ERROR:  :: 201 != 405
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.3.1\plugins\python\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python3.8.2\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python3.8.2\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: '201' != 405

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    self.assertEqual(expected["status_code"], code)
  File "C:\Program Files\JetBrains\PyCharm 2019.3.1\plugins\python\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 201 != 405
2020-04-17 23:01:46,576 -- [test_register.py-->line:50] - ERROR: 用例--注册成功-用户名包含中文--执行未通过
2020-04-17 23:01:46,576 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '201'}
2020-04-17 23:01:46,576 -- [test_register.py-->line:52] - DEBUG: 实际结果：<Response [405]>
2020-04-17 23:01:46,576 -- [test_register.py-->line:53] - ERROR:  :: 201 != 405
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.3.1\plugins\python\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python3.8.2\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python3.8.2\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: '201' != 405

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    self.assertEqual(expected["status_code"], code)
  File "C:\Program Files\JetBrains\PyCharm 2019.3.1\plugins\python\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 201 != 405
2020-04-17 23:01:46,946 -- [test_register.py-->line:50] - ERROR: 用例--已注册的用户名--执行未通过
2020-04-17 23:01:46,946 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:01:46,946 -- [test_register.py-->line:52] - DEBUG: 实际结果：<Response [405]>
2020-04-17 23:01:46,946 -- [test_register.py-->line:53] - ERROR:  :: 400 != 405
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.3.1\plugins\python\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python3.8.2\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python3.8.2\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: '400' != 405

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    self.assertEqual(expected["status_code"], code)
  File "C:\Program Files\JetBrains\PyCharm 2019.3.1\plugins\python\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 400 != 405
2020-04-17 23:01:47,311 -- [test_register.py-->line:50] - ERROR: 用例--已注册的邮箱--执行未通过
2020-04-17 23:01:47,311 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:01:47,311 -- [test_register.py-->line:52] - DEBUG: 实际结果：<Response [405]>
2020-04-17 23:01:47,311 -- [test_register.py-->line:53] - ERROR:  :: 400 != 405
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.3.1\plugins\python\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python3.8.2\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python3.8.2\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: '400' != 405

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    self.assertEqual(expected["status_code"], code)
  File "C:\Program Files\JetBrains\PyCharm 2019.3.1\plugins\python\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 400 != 405
2020-04-17 23:01:47,674 -- [test_register.py-->line:50] - ERROR: 用例--用户名小于6位--执行未通过
2020-04-17 23:01:47,674 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:01:47,674 -- [test_register.py-->line:52] - DEBUG: 实际结果：<Response [405]>
2020-04-17 23:01:47,674 -- [test_register.py-->line:53] - ERROR:  :: 400 != 405
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.3.1\plugins\python\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python3.8.2\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python3.8.2\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: '400' != 405

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    self.assertEqual(expected["status_code"], code)
  File "C:\Program Files\JetBrains\PyCharm 2019.3.1\plugins\python\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 400 != 405
2020-04-17 23:01:48,037 -- [test_register.py-->line:50] - ERROR: 用例--邮箱格式错误--执行未通过
2020-04-17 23:01:48,037 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:01:48,037 -- [test_register.py-->line:52] - DEBUG: 实际结果：<Response [405]>
2020-04-17 23:01:48,037 -- [test_register.py-->line:53] - ERROR:  :: 400 != 405
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.3.1\plugins\python\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python3.8.2\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python3.8.2\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: '400' != 405

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    self.assertEqual(expected["status_code"], code)
  File "C:\Program Files\JetBrains\PyCharm 2019.3.1\plugins\python\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 400 != 405
2020-04-17 23:01:48,407 -- [test_register.py-->line:50] - ERROR: 用例--用户名大于20位--执行未通过
2020-04-17 23:01:48,407 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:01:48,407 -- [test_register.py-->line:52] - DEBUG: 实际结果：<Response [405]>
2020-04-17 23:01:48,407 -- [test_register.py-->line:53] - ERROR:  :: 400 != 405
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.3.1\plugins\python\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python3.8.2\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python3.8.2\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: '400' != 405

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    self.assertEqual(expected["status_code"], code)
  File "C:\Program Files\JetBrains\PyCharm 2019.3.1\plugins\python\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 400 != 405
2020-04-17 23:01:48,761 -- [test_register.py-->line:50] - ERROR: 用例--密码小于6位--执行未通过
2020-04-17 23:01:48,761 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:01:48,761 -- [test_register.py-->line:52] - DEBUG: 实际结果：<Response [405]>
2020-04-17 23:01:48,761 -- [test_register.py-->line:53] - ERROR:  :: 400 != 405
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.3.1\plugins\python\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python3.8.2\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python3.8.2\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: '400' != 405

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    self.assertEqual(expected["status_code"], code)
  File "C:\Program Files\JetBrains\PyCharm 2019.3.1\plugins\python\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 400 != 405
2020-04-17 23:01:49,123 -- [test_register.py-->line:50] - ERROR: 用例--密码大于20位--执行未通过
2020-04-17 23:01:49,123 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:01:49,123 -- [test_register.py-->line:52] - DEBUG: 实际结果：<Response [405]>
2020-04-17 23:01:49,123 -- [test_register.py-->line:53] - ERROR:  :: 400 != 405
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.3.1\plugins\python\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python3.8.2\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python3.8.2\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: '400' != 405

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    self.assertEqual(expected["status_code"], code)
  File "C:\Program Files\JetBrains\PyCharm 2019.3.1\plugins\python\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 400 != 405
2020-04-17 23:01:49,478 -- [test_register.py-->line:50] - ERROR: 用例--两遍密码不一致--执行未通过
2020-04-17 23:01:49,478 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:01:49,478 -- [test_register.py-->line:52] - DEBUG: 实际结果：<Response [405]>
2020-04-17 23:01:49,478 -- [test_register.py-->line:53] - ERROR:  :: 400 != 405
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.3.1\plugins\python\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python3.8.2\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python3.8.2\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: '400' != 405

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    self.assertEqual(expected["status_code"], code)
  File "C:\Program Files\JetBrains\PyCharm 2019.3.1\plugins\python\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 400 != 405
2020-04-17 23:01:49,844 -- [test_register.py-->line:50] - ERROR: 用例--密码为中文--执行未通过
2020-04-17 23:01:49,844 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:01:49,844 -- [test_register.py-->line:52] - DEBUG: 实际结果：<Response [405]>
2020-04-17 23:01:49,844 -- [test_register.py-->line:53] - ERROR:  :: 400 != 405
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.3.1\plugins\python\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python3.8.2\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python3.8.2\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: '400' != 405

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    self.assertEqual(expected["status_code"], code)
  File "C:\Program Files\JetBrains\PyCharm 2019.3.1\plugins\python\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 400 != 405
2020-04-17 23:01:50,195 -- [test_register.py-->line:50] - ERROR: 用例--确认密码为中文--执行未通过
2020-04-17 23:01:50,211 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:01:50,211 -- [test_register.py-->line:52] - DEBUG: 实际结果：<Response [405]>
2020-04-17 23:01:50,211 -- [test_register.py-->line:53] - ERROR:  :: 400 != 405
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.3.1\plugins\python\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python3.8.2\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python3.8.2\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: '400' != 405

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    self.assertEqual(expected["status_code"], code)
  File "C:\Program Files\JetBrains\PyCharm 2019.3.1\plugins\python\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 400 != 405
2020-04-17 23:02:44,375 -- [test_register.py-->line:50] - ERROR: 用例--注册成功-用户名包含英文和数字--执行未通过
2020-04-17 23:02:44,375 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '201'}
2020-04-17 23:02:44,375 -- [test_register.py-->line:52] - DEBUG: 实际结果：<Response [405]>
2020-04-17 23:02:44,375 -- [test_register.py-->line:53] - ERROR:  :: 201 != 405
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.3.1\plugins\python\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python3.8.2\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python3.8.2\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: '201' != 405

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    self.assertEqual(expected["status_code"], code)
  File "C:\Program Files\JetBrains\PyCharm 2019.3.1\plugins\python\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 201 != 405
2020-04-17 23:02:44,734 -- [test_register.py-->line:50] - ERROR: 用例--注册成功-用户名包含中文--执行未通过
2020-04-17 23:02:44,734 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '201'}
2020-04-17 23:02:44,734 -- [test_register.py-->line:52] - DEBUG: 实际结果：<Response [405]>
2020-04-17 23:02:44,734 -- [test_register.py-->line:53] - ERROR:  :: 201 != 405
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.3.1\plugins\python\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python3.8.2\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python3.8.2\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: '201' != 405

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    self.assertEqual(expected["status_code"], code)
  File "C:\Program Files\JetBrains\PyCharm 2019.3.1\plugins\python\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 201 != 405
2020-04-17 23:02:45,106 -- [test_register.py-->line:50] - ERROR: 用例--注册成功-用户名为纯英文--执行未通过
2020-04-17 23:02:45,106 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '201'}
2020-04-17 23:02:45,106 -- [test_register.py-->line:52] - DEBUG: 实际结果：<Response [405]>
2020-04-17 23:02:45,106 -- [test_register.py-->line:53] - ERROR:  :: 201 != 405
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.3.1\plugins\python\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python3.8.2\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python3.8.2\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: '201' != 405

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    self.assertEqual(expected["status_code"], code)
  File "C:\Program Files\JetBrains\PyCharm 2019.3.1\plugins\python\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 201 != 405
2020-04-17 23:02:45,468 -- [test_register.py-->line:50] - ERROR: 用例--注册成功-用户名包含中文--执行未通过
2020-04-17 23:02:45,468 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '201'}
2020-04-17 23:02:45,468 -- [test_register.py-->line:52] - DEBUG: 实际结果：<Response [405]>
2020-04-17 23:02:45,468 -- [test_register.py-->line:53] - ERROR:  :: 201 != 405
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.3.1\plugins\python\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python3.8.2\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python3.8.2\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: '201' != 405

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    self.assertEqual(expected["status_code"], code)
  File "C:\Program Files\JetBrains\PyCharm 2019.3.1\plugins\python\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 201 != 405
2020-04-17 23:02:45,828 -- [test_register.py-->line:50] - ERROR: 用例--已注册的用户名--执行未通过
2020-04-17 23:02:45,828 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:02:45,828 -- [test_register.py-->line:52] - DEBUG: 实际结果：<Response [405]>
2020-04-17 23:02:45,828 -- [test_register.py-->line:53] - ERROR:  :: 400 != 405
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.3.1\plugins\python\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python3.8.2\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python3.8.2\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: '400' != 405

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    self.assertEqual(expected["status_code"], code)
  File "C:\Program Files\JetBrains\PyCharm 2019.3.1\plugins\python\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 400 != 405
2020-04-17 23:02:46,208 -- [test_register.py-->line:50] - ERROR: 用例--已注册的邮箱--执行未通过
2020-04-17 23:02:46,208 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:02:46,208 -- [test_register.py-->line:52] - DEBUG: 实际结果：<Response [405]>
2020-04-17 23:02:46,208 -- [test_register.py-->line:53] - ERROR:  :: 400 != 405
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.3.1\plugins\python\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python3.8.2\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python3.8.2\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: '400' != 405

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    self.assertEqual(expected["status_code"], code)
  File "C:\Program Files\JetBrains\PyCharm 2019.3.1\plugins\python\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 400 != 405
2020-04-17 23:02:46,571 -- [test_register.py-->line:50] - ERROR: 用例--用户名小于6位--执行未通过
2020-04-17 23:02:46,571 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:02:46,571 -- [test_register.py-->line:52] - DEBUG: 实际结果：<Response [405]>
2020-04-17 23:02:46,571 -- [test_register.py-->line:53] - ERROR:  :: 400 != 405
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.3.1\plugins\python\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python3.8.2\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python3.8.2\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: '400' != 405

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    self.assertEqual(expected["status_code"], code)
  File "C:\Program Files\JetBrains\PyCharm 2019.3.1\plugins\python\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 400 != 405
2020-04-17 23:02:46,943 -- [test_register.py-->line:50] - ERROR: 用例--邮箱格式错误--执行未通过
2020-04-17 23:02:46,943 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:02:46,943 -- [test_register.py-->line:52] - DEBUG: 实际结果：<Response [405]>
2020-04-17 23:02:46,943 -- [test_register.py-->line:53] - ERROR:  :: 400 != 405
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.3.1\plugins\python\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python3.8.2\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python3.8.2\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: '400' != 405

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    self.assertEqual(expected["status_code"], code)
  File "C:\Program Files\JetBrains\PyCharm 2019.3.1\plugins\python\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 400 != 405
2020-04-17 23:02:47,313 -- [test_register.py-->line:50] - ERROR: 用例--用户名大于20位--执行未通过
2020-04-17 23:02:47,313 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:02:47,313 -- [test_register.py-->line:52] - DEBUG: 实际结果：<Response [405]>
2020-04-17 23:02:47,313 -- [test_register.py-->line:53] - ERROR:  :: 400 != 405
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.3.1\plugins\python\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python3.8.2\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python3.8.2\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: '400' != 405

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    self.assertEqual(expected["status_code"], code)
  File "C:\Program Files\JetBrains\PyCharm 2019.3.1\plugins\python\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 400 != 405
2020-04-17 23:02:47,661 -- [test_register.py-->line:50] - ERROR: 用例--密码小于6位--执行未通过
2020-04-17 23:02:47,661 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:02:47,661 -- [test_register.py-->line:52] - DEBUG: 实际结果：<Response [405]>
2020-04-17 23:02:47,661 -- [test_register.py-->line:53] - ERROR:  :: 400 != 405
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.3.1\plugins\python\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python3.8.2\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python3.8.2\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: '400' != 405

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    self.assertEqual(expected["status_code"], code)
  File "C:\Program Files\JetBrains\PyCharm 2019.3.1\plugins\python\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 400 != 405
2020-04-17 23:02:48,030 -- [test_register.py-->line:50] - ERROR: 用例--密码大于20位--执行未通过
2020-04-17 23:02:48,030 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:02:48,030 -- [test_register.py-->line:52] - DEBUG: 实际结果：<Response [405]>
2020-04-17 23:02:48,030 -- [test_register.py-->line:53] - ERROR:  :: 400 != 405
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.3.1\plugins\python\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python3.8.2\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python3.8.2\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: '400' != 405

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    self.assertEqual(expected["status_code"], code)
  File "C:\Program Files\JetBrains\PyCharm 2019.3.1\plugins\python\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 400 != 405
2020-04-17 23:02:48,393 -- [test_register.py-->line:50] - ERROR: 用例--两遍密码不一致--执行未通过
2020-04-17 23:02:48,393 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:02:48,393 -- [test_register.py-->line:52] - DEBUG: 实际结果：<Response [405]>
2020-04-17 23:02:48,393 -- [test_register.py-->line:53] - ERROR:  :: 400 != 405
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.3.1\plugins\python\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python3.8.2\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python3.8.2\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: '400' != 405

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    self.assertEqual(expected["status_code"], code)
  File "C:\Program Files\JetBrains\PyCharm 2019.3.1\plugins\python\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 400 != 405
2020-04-17 23:02:48,778 -- [test_register.py-->line:50] - ERROR: 用例--密码为中文--执行未通过
2020-04-17 23:02:48,778 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:02:48,778 -- [test_register.py-->line:52] - DEBUG: 实际结果：<Response [405]>
2020-04-17 23:02:48,778 -- [test_register.py-->line:53] - ERROR:  :: 400 != 405
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.3.1\plugins\python\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python3.8.2\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python3.8.2\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: '400' != 405

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    self.assertEqual(expected["status_code"], code)
  File "C:\Program Files\JetBrains\PyCharm 2019.3.1\plugins\python\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 400 != 405
2020-04-17 23:02:49,164 -- [test_register.py-->line:50] - ERROR: 用例--确认密码为中文--执行未通过
2020-04-17 23:02:49,164 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:02:49,164 -- [test_register.py-->line:52] - DEBUG: 实际结果：<Response [405]>
2020-04-17 23:02:49,164 -- [test_register.py-->line:53] - ERROR:  :: 400 != 405
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.3.1\plugins\python\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Python3.8.2\lib\unittest\case.py", line 912, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python3.8.2\lib\unittest\case.py", line 905, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: '400' != 405

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    self.assertEqual(expected["status_code"], code)
  File "C:\Program Files\JetBrains\PyCharm 2019.3.1\plugins\python\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 400 != 405
2020-04-17 23:08:46,387 -- [test_register.py-->line:50] - ERROR: 用例--注册成功-用户名包含英文和数字--执行未通过
2020-04-17 23:08:46,387 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '201'}
2020-04-17 23:08:46,387 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:08:46,387 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:08:46,726 -- [test_register.py-->line:50] - ERROR: 用例--注册成功-用户名包含中文--执行未通过
2020-04-17 23:08:46,726 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '201'}
2020-04-17 23:08:46,726 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:08:46,726 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:08:47,042 -- [test_register.py-->line:50] - ERROR: 用例--注册成功-用户名为纯英文--执行未通过
2020-04-17 23:08:47,042 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '201'}
2020-04-17 23:08:47,042 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:08:47,042 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:08:47,358 -- [test_register.py-->line:50] - ERROR: 用例--注册成功-用户名包含中文--执行未通过
2020-04-17 23:08:47,358 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '201'}
2020-04-17 23:08:47,358 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:08:47,358 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:08:47,674 -- [test_register.py-->line:50] - ERROR: 用例--已注册的用户名--执行未通过
2020-04-17 23:08:47,674 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:08:47,674 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:08:47,674 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:08:48,007 -- [test_register.py-->line:50] - ERROR: 用例--已注册的邮箱--执行未通过
2020-04-17 23:08:48,007 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:08:48,007 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:08:48,007 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:08:48,329 -- [test_register.py-->line:50] - ERROR: 用例--用户名小于6位--执行未通过
2020-04-17 23:08:48,329 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:08:48,329 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:08:48,329 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:08:48,662 -- [test_register.py-->line:50] - ERROR: 用例--邮箱格式错误--执行未通过
2020-04-17 23:08:48,662 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:08:48,662 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:08:48,662 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:08:48,978 -- [test_register.py-->line:50] - ERROR: 用例--用户名大于20位--执行未通过
2020-04-17 23:08:48,978 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:08:48,978 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:08:48,978 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:08:49,303 -- [test_register.py-->line:50] - ERROR: 用例--密码小于6位--执行未通过
2020-04-17 23:08:49,303 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:08:49,303 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:08:49,303 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:08:49,611 -- [test_register.py-->line:50] - ERROR: 用例--密码大于20位--执行未通过
2020-04-17 23:08:49,611 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:08:49,611 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:08:49,611 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:08:49,933 -- [test_register.py-->line:50] - ERROR: 用例--两遍密码不一致--执行未通过
2020-04-17 23:08:49,933 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:08:49,933 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:08:49,933 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:08:50,266 -- [test_register.py-->line:50] - ERROR: 用例--密码为中文--执行未通过
2020-04-17 23:08:50,266 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:08:50,266 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:08:50,266 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:08:50,581 -- [test_register.py-->line:50] - ERROR: 用例--确认密码为中文--执行未通过
2020-04-17 23:08:50,581 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:08:50,581 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:08:50,597 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:09:22,578 -- [test_register.py-->line:50] - ERROR: 用例--注册成功-用户名包含英文和数字--执行未通过
2020-04-17 23:09:22,578 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'username': '#username#'}
2020-04-17 23:09:22,578 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:09:22,578 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:09:22,948 -- [test_register.py-->line:50] - ERROR: 用例--注册成功-用户名包含中文--执行未通过
2020-04-17 23:09:22,963 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '201'}
2020-04-17 23:09:22,963 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:09:22,963 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:09:23,333 -- [test_register.py-->line:50] - ERROR: 用例--注册成功-用户名为纯英文--执行未通过
2020-04-17 23:09:23,333 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '201'}
2020-04-17 23:09:23,333 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:09:23,333 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:09:23,696 -- [test_register.py-->line:50] - ERROR: 用例--注册成功-用户名包含中文--执行未通过
2020-04-17 23:09:23,696 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '201'}
2020-04-17 23:09:23,696 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:09:23,696 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:09:24,065 -- [test_register.py-->line:50] - ERROR: 用例--已注册的用户名--执行未通过
2020-04-17 23:09:24,065 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:09:24,065 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:09:24,065 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:09:24,435 -- [test_register.py-->line:50] - ERROR: 用例--已注册的邮箱--执行未通过
2020-04-17 23:09:24,435 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:09:24,435 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:09:24,435 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:09:24,812 -- [test_register.py-->line:50] - ERROR: 用例--用户名小于6位--执行未通过
2020-04-17 23:09:24,813 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:09:24,813 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:09:24,813 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:09:25,168 -- [test_register.py-->line:50] - ERROR: 用例--邮箱格式错误--执行未通过
2020-04-17 23:09:25,168 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:09:25,168 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:09:25,168 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:09:25,538 -- [test_register.py-->line:50] - ERROR: 用例--用户名大于20位--执行未通过
2020-04-17 23:09:25,538 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:09:25,538 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:09:25,538 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:09:25,901 -- [test_register.py-->line:50] - ERROR: 用例--密码小于6位--执行未通过
2020-04-17 23:09:25,901 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:09:25,901 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:09:25,901 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:09:26,271 -- [test_register.py-->line:50] - ERROR: 用例--密码大于20位--执行未通过
2020-04-17 23:09:26,271 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:09:26,271 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:09:26,271 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:09:26,640 -- [test_register.py-->line:50] - ERROR: 用例--两遍密码不一致--执行未通过
2020-04-17 23:09:26,640 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:09:26,640 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:09:26,640 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:09:27,003 -- [test_register.py-->line:50] - ERROR: 用例--密码为中文--执行未通过
2020-04-17 23:09:27,003 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:09:27,003 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:09:27,003 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:09:27,388 -- [test_register.py-->line:50] - ERROR: 用例--确认密码为中文--执行未通过
2020-04-17 23:09:27,388 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:09:27,388 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:09:27,388 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:11:48,832 -- [test_register.py-->line:50] - ERROR: 用例--注册成功-用户名包含英文和数字--执行未通过
2020-04-17 23:11:48,832 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'username': 'fls95554'}
2020-04-17 23:11:48,832 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:11:48,832 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:11:49,164 -- [test_register.py-->line:50] - ERROR: 用例--注册成功-用户名包含中文--执行未通过
2020-04-17 23:11:49,164 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '201'}
2020-04-17 23:11:49,164 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:11:49,164 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:11:49,480 -- [test_register.py-->line:50] - ERROR: 用例--注册成功-用户名为纯英文--执行未通过
2020-04-17 23:11:49,480 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '201'}
2020-04-17 23:11:49,480 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:11:49,480 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:11:49,812 -- [test_register.py-->line:50] - ERROR: 用例--注册成功-用户名包含中文--执行未通过
2020-04-17 23:11:49,812 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '201'}
2020-04-17 23:11:49,812 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:11:49,812 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:11:50,128 -- [test_register.py-->line:50] - ERROR: 用例--已注册的用户名--执行未通过
2020-04-17 23:11:50,128 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:11:50,128 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:11:50,128 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:11:50,435 -- [test_register.py-->line:50] - ERROR: 用例--已注册的邮箱--执行未通过
2020-04-17 23:11:50,435 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:11:50,435 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:11:50,435 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:11:50,751 -- [test_register.py-->line:50] - ERROR: 用例--用户名小于6位--执行未通过
2020-04-17 23:11:50,751 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:11:50,751 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:11:50,751 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:11:51,083 -- [test_register.py-->line:50] - ERROR: 用例--邮箱格式错误--执行未通过
2020-04-17 23:11:51,083 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:11:51,083 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:11:51,083 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:11:51,415 -- [test_register.py-->line:50] - ERROR: 用例--用户名大于20位--执行未通过
2020-04-17 23:11:51,415 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:11:51,415 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:11:51,415 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:11:51,716 -- [test_register.py-->line:50] - ERROR: 用例--密码小于6位--执行未通过
2020-04-17 23:11:51,716 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:11:51,716 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:11:51,716 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:11:52,054 -- [test_register.py-->line:50] - ERROR: 用例--密码大于20位--执行未通过
2020-04-17 23:11:52,054 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:11:52,054 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:11:52,054 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:11:52,370 -- [test_register.py-->line:50] - ERROR: 用例--两遍密码不一致--执行未通过
2020-04-17 23:11:52,370 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:11:52,370 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:11:52,370 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:11:52,687 -- [test_register.py-->line:50] - ERROR: 用例--密码为中文--执行未通过
2020-04-17 23:11:52,687 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:11:52,687 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:11:52,687 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:11:53,003 -- [test_register.py-->line:50] - ERROR: 用例--确认密码为中文--执行未通过
2020-04-17 23:11:53,003 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:11:53,003 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:11:53,003 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:14:13,496 -- [test_register.py-->line:50] - ERROR: 用例--注册成功-用户名包含英文和数字--执行未通过
2020-04-17 23:14:13,496 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'username': 'fls04444'}
2020-04-17 23:14:13,496 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:14:13,496 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:14:13,835 -- [test_register.py-->line:50] - ERROR: 用例--注册成功-用户名包含中文--执行未通过
2020-04-17 23:14:13,835 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '201'}
2020-04-17 23:14:13,835 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:14:13,835 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:14:14,151 -- [test_register.py-->line:50] - ERROR: 用例--注册成功-用户名为纯英文--执行未通过
2020-04-17 23:14:14,151 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '201'}
2020-04-17 23:14:14,151 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:14:14,151 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:14:14,467 -- [test_register.py-->line:50] - ERROR: 用例--注册成功-用户名包含中文--执行未通过
2020-04-17 23:14:14,467 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '201'}
2020-04-17 23:14:14,467 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:14:14,467 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:14:14,795 -- [test_register.py-->line:50] - ERROR: 用例--已注册的用户名--执行未通过
2020-04-17 23:14:14,795 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:14:14,795 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:14:14,795 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:14:15,100 -- [test_register.py-->line:50] - ERROR: 用例--已注册的邮箱--执行未通过
2020-04-17 23:14:15,100 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:14:15,100 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:14:15,100 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:14:15,423 -- [test_register.py-->line:50] - ERROR: 用例--用户名小于6位--执行未通过
2020-04-17 23:14:15,423 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:14:15,423 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:14:15,423 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:14:15,755 -- [test_register.py-->line:50] - ERROR: 用例--邮箱格式错误--执行未通过
2020-04-17 23:14:15,755 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:14:15,755 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:14:15,755 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:14:16,087 -- [test_register.py-->line:50] - ERROR: 用例--用户名大于20位--执行未通过
2020-04-17 23:14:16,087 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:14:16,087 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:14:16,087 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:14:16,424 -- [test_register.py-->line:50] - ERROR: 用例--密码小于6位--执行未通过
2020-04-17 23:14:16,424 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:14:16,424 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:14:16,424 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:14:16,741 -- [test_register.py-->line:50] - ERROR: 用例--密码大于20位--执行未通过
2020-04-17 23:14:16,756 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:14:16,756 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:14:16,756 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:14:17,072 -- [test_register.py-->line:50] - ERROR: 用例--两遍密码不一致--执行未通过
2020-04-17 23:14:17,072 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:14:17,072 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:14:17,072 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:14:17,404 -- [test_register.py-->line:50] - ERROR: 用例--密码为中文--执行未通过
2020-04-17 23:14:17,404 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:14:17,404 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:14:17,404 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:14:17,758 -- [test_register.py-->line:50] - ERROR: 用例--确认密码为中文--执行未通过
2020-04-17 23:14:17,758 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:14:17,758 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:14:17,758 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:18:03,231 -- [test_register.py-->line:49] - ERROR: 用例--注册成功-用户名包含英文和数字--执行未通过
2020-04-17 23:18:03,231 -- [test_register.py-->line:50] - DEBUG: 预期结果：{'username': 'fls55216'}
2020-04-17 23:18:03,231 -- [test_register.py-->line:51] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:18:03,231 -- [test_register.py-->line:52] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 40, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:18:03,601 -- [test_register.py-->line:49] - ERROR: 用例--注册成功-用户名包含中文--执行未通过
2020-04-17 23:18:03,601 -- [test_register.py-->line:50] - DEBUG: 预期结果：{'status_code': '201'}
2020-04-17 23:18:03,601 -- [test_register.py-->line:51] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:18:03,601 -- [test_register.py-->line:52] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 40, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:18:03,980 -- [test_register.py-->line:49] - ERROR: 用例--注册成功-用户名为纯英文--执行未通过
2020-04-17 23:18:03,980 -- [test_register.py-->line:50] - DEBUG: 预期结果：{'status_code': '201'}
2020-04-17 23:18:03,980 -- [test_register.py-->line:51] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:18:03,980 -- [test_register.py-->line:52] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 40, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:18:04,360 -- [test_register.py-->line:49] - ERROR: 用例--注册成功-用户名包含中文--执行未通过
2020-04-17 23:18:04,360 -- [test_register.py-->line:50] - DEBUG: 预期结果：{'status_code': '201'}
2020-04-17 23:18:04,360 -- [test_register.py-->line:51] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:18:04,360 -- [test_register.py-->line:52] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 40, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:18:04,735 -- [test_register.py-->line:49] - ERROR: 用例--已注册的用户名--执行未通过
2020-04-17 23:18:04,735 -- [test_register.py-->line:50] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:18:04,735 -- [test_register.py-->line:51] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:18:04,735 -- [test_register.py-->line:52] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 40, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:18:05,103 -- [test_register.py-->line:49] - ERROR: 用例--已注册的邮箱--执行未通过
2020-04-17 23:18:05,103 -- [test_register.py-->line:50] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:18:05,103 -- [test_register.py-->line:51] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:18:05,103 -- [test_register.py-->line:52] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 40, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:18:05,451 -- [test_register.py-->line:49] - ERROR: 用例--用户名小于6位--执行未通过
2020-04-17 23:18:05,467 -- [test_register.py-->line:50] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:18:05,467 -- [test_register.py-->line:51] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:18:05,467 -- [test_register.py-->line:52] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 40, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:18:05,812 -- [test_register.py-->line:49] - ERROR: 用例--邮箱格式错误--执行未通过
2020-04-17 23:18:05,812 -- [test_register.py-->line:50] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:18:05,812 -- [test_register.py-->line:51] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:18:05,812 -- [test_register.py-->line:52] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 40, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:18:06,170 -- [test_register.py-->line:49] - ERROR: 用例--用户名大于20位--执行未通过
2020-04-17 23:18:06,170 -- [test_register.py-->line:50] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:18:06,170 -- [test_register.py-->line:51] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:18:06,170 -- [test_register.py-->line:52] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 40, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:18:06,524 -- [test_register.py-->line:49] - ERROR: 用例--密码小于6位--执行未通过
2020-04-17 23:18:06,524 -- [test_register.py-->line:50] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:18:06,524 -- [test_register.py-->line:51] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:18:06,524 -- [test_register.py-->line:52] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 40, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:18:06,891 -- [test_register.py-->line:49] - ERROR: 用例--密码大于20位--执行未通过
2020-04-17 23:18:06,891 -- [test_register.py-->line:50] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:18:06,891 -- [test_register.py-->line:51] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:18:06,891 -- [test_register.py-->line:52] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 40, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:18:07,241 -- [test_register.py-->line:49] - ERROR: 用例--两遍密码不一致--执行未通过
2020-04-17 23:18:07,257 -- [test_register.py-->line:50] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:18:07,257 -- [test_register.py-->line:51] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:18:07,257 -- [test_register.py-->line:52] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 40, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:18:07,611 -- [test_register.py-->line:49] - ERROR: 用例--密码为中文--执行未通过
2020-04-17 23:18:07,611 -- [test_register.py-->line:50] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:18:07,611 -- [test_register.py-->line:51] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:18:07,611 -- [test_register.py-->line:52] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 40, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:18:07,973 -- [test_register.py-->line:49] - ERROR: 用例--确认密码为中文--执行未通过
2020-04-17 23:18:07,973 -- [test_register.py-->line:50] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:18:07,973 -- [test_register.py-->line:51] - DEBUG: 实际结果：{'detail': '方法 “GET” 不被允许。'}
2020-04-17 23:18:07,974 -- [test_register.py-->line:52] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 40, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:39:50,029 -- [test_register.py-->line:50] - ERROR: 用例--注册成功-用户名包含中文--执行未通过
2020-04-17 23:39:50,029 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '201'}
2020-04-17 23:39:50,029 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'id': 3640, 'username': 'fls19931哈哈哈', 'token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjozNjQwLCJ1c2VybmFtZSI6ImZsczE5OTMxXHU1NGM4XHU1NGM4XHU1NGM4IiwiZXhwIjoxNTg3MjI0MzkwLCJlbWFpbCI6IjYxMDUwNTQwMkBxcS5jb20ifQ.JLCTZ7ruNhuwDhPYQk4elTp6VqgcSfIUrshiyqZm6oM'}
2020-04-17 23:39:50,029 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:39:50,483 -- [test_register.py-->line:50] - ERROR: 用例--注册成功-用户名为纯英文--执行未通过
2020-04-17 23:39:50,483 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '201'}
2020-04-17 23:39:50,483 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'id': 3641, 'username': 'littlelemon', 'token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjozNjQxLCJ1c2VybmFtZSI6ImxpdHRsZWxlbW9uIiwiZXhwIjoxNTg3MjI0MzkxLCJlbWFpbCI6IjA4ODA3ODY2MkBxcS5jb20ifQ.-9DiIksMIK7cspQSmEHnhIjXxLT1uHVbdeVSREu6gKU'}
2020-04-17 23:39:50,483 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:39:50,924 -- [test_register.py-->line:50] - ERROR: 用例--注册成功-用户名包含中文--执行未通过
2020-04-17 23:39:50,924 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '201'}
2020-04-17 23:39:50,924 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'id': 3642, 'username': '哈哈哈哈哈哈哈', 'token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjozNjQyLCJ1c2VybmFtZSI6Ilx1NTRjOFx1NTRjOFx1NTRjOFx1NTRjOFx1NTRjOFx1NTRjOFx1NTRjOCIsImV4cCI6MTU4NzIyNDM5MSwiZW1haWwiOiI5ODA1MjA4NjNAcXEuY29tIn0.L5QsdpeDiX__jLojjzbJTBe8a6C_aVSfRtex911Rch0'}
2020-04-17 23:39:50,924 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:39:51,247 -- [test_register.py-->line:50] - ERROR: 用例--已注册的用户名--执行未通过
2020-04-17 23:39:51,247 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:39:51,247 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'username': ['已存在一位使用该名字的用户。']}
2020-04-17 23:39:51,247 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:39:51,570 -- [test_register.py-->line:50] - ERROR: 用例--已注册的邮箱--执行未通过
2020-04-17 23:39:51,570 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:39:51,570 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'email': ['此邮箱已注册']}
2020-04-17 23:39:51,570 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:39:51,887 -- [test_register.py-->line:50] - ERROR: 用例--用户名小于6位--执行未通过
2020-04-17 23:39:51,887 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:39:51,887 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'username': ['仅允许6-20个字符的用户名']}
2020-04-17 23:39:51,887 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:39:52,203 -- [test_register.py-->line:50] - ERROR: 用例--邮箱格式错误--执行未通过
2020-04-17 23:39:52,203 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:39:52,203 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'email': ['请输入合法的邮件地址。']}
2020-04-17 23:39:52,203 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:39:52,535 -- [test_register.py-->line:50] - ERROR: 用例--用户名大于20位--执行未通过
2020-04-17 23:39:52,535 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:39:52,535 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'username': ['仅允许6-20个字符的用户名']}
2020-04-17 23:39:52,535 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:39:52,851 -- [test_register.py-->line:50] - ERROR: 用例--密码小于6位--执行未通过
2020-04-17 23:39:52,851 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:39:52,851 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'password': ['仅允许6-20个字符的密码'], 'password_confirm': ['仅允许6~20个字符的确认密码']}
2020-04-17 23:39:52,851 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:39:53,174 -- [test_register.py-->line:50] - ERROR: 用例--密码大于20位--执行未通过
2020-04-17 23:39:53,174 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:39:53,174 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'password': ['仅允许6-20个字符的密码'], 'password_confirm': ['仅允许6~20个字符的确认密码']}
2020-04-17 23:39:53,174 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:39:53,491 -- [test_register.py-->line:50] - ERROR: 用例--两遍密码不一致--执行未通过
2020-04-17 23:39:53,491 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:39:53,491 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'password_confirm': ['仅允许6~20个字符的确认密码']}
2020-04-17 23:39:53,491 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:39:53,823 -- [test_register.py-->line:50] - ERROR: 用例--密码为中文--执行未通过
2020-04-17 23:39:53,823 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:39:53,823 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'non_field_errors': ['两次输入密码不正确']}
2020-04-17 23:39:53,823 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:39:54,139 -- [test_register.py-->line:50] - ERROR: 用例--确认密码为中文--执行未通过
2020-04-17 23:39:54,139 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:39:54,139 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'non_field_errors': ['两次输入密码不正确']}
2020-04-17 23:39:54,139 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:40:22,741 -- [test_register.py-->line:58] - INFO: 用例--注册成功-用户名包含英文和数字--执行通过
2020-04-17 23:40:23,195 -- [test_register.py-->line:50] - ERROR: 用例--注册成功-用户名包含中文--执行未通过
2020-04-17 23:40:23,195 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '201'}
2020-04-17 23:40:23,195 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'id': 3644, 'username': 'fls24295哈哈哈', 'token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjozNjQ0LCJ1c2VybmFtZSI6ImZsczI0Mjk1XHU1NGM4XHU1NGM4XHU1NGM4IiwiZXhwIjoxNTg3MjI0NDIzLCJlbWFpbCI6IjA0MTQ4MjY4N0BxcS5jb20ifQ.b04B6HJVsKm5oG0hDsQLrTakxkbWv082B3Wn3c2WU_4'}
2020-04-17 23:40:23,195 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:40:23,511 -- [test_register.py-->line:50] - ERROR: 用例--注册成功-用户名为纯英文--执行未通过
2020-04-17 23:40:23,511 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '201'}
2020-04-17 23:40:23,511 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'username': ['已存在一位使用该名字的用户。']}
2020-04-17 23:40:23,511 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:40:23,828 -- [test_register.py-->line:50] - ERROR: 用例--注册成功-用户名包含中文--执行未通过
2020-04-17 23:40:23,828 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '201'}
2020-04-17 23:40:23,828 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'username': ['已存在一位使用该名字的用户。']}
2020-04-17 23:40:23,828 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:40:24,144 -- [test_register.py-->line:50] - ERROR: 用例--已注册的用户名--执行未通过
2020-04-17 23:40:24,144 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:40:24,144 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'username': ['已存在一位使用该名字的用户。']}
2020-04-17 23:40:24,144 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:40:24,460 -- [test_register.py-->line:50] - ERROR: 用例--已注册的邮箱--执行未通过
2020-04-17 23:40:24,460 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:40:24,460 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'email': ['此邮箱已注册']}
2020-04-17 23:40:24,460 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:40:24,777 -- [test_register.py-->line:50] - ERROR: 用例--用户名小于6位--执行未通过
2020-04-17 23:40:24,777 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:40:24,777 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'username': ['仅允许6-20个字符的用户名']}
2020-04-17 23:40:24,777 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:40:25,100 -- [test_register.py-->line:50] - ERROR: 用例--邮箱格式错误--执行未通过
2020-04-17 23:40:25,100 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:40:25,100 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'email': ['请输入合法的邮件地址。']}
2020-04-17 23:40:25,100 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:40:25,416 -- [test_register.py-->line:50] - ERROR: 用例--用户名大于20位--执行未通过
2020-04-17 23:40:25,416 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:40:25,416 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'username': ['仅允许6-20个字符的用户名']}
2020-04-17 23:40:25,416 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:40:25,733 -- [test_register.py-->line:50] - ERROR: 用例--密码小于6位--执行未通过
2020-04-17 23:40:25,733 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:40:25,733 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'password': ['仅允许6-20个字符的密码'], 'password_confirm': ['仅允许6~20个字符的确认密码']}
2020-04-17 23:40:25,733 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:40:26,049 -- [test_register.py-->line:50] - ERROR: 用例--密码大于20位--执行未通过
2020-04-17 23:40:26,049 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:40:26,049 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'password': ['仅允许6-20个字符的密码'], 'password_confirm': ['仅允许6~20个字符的确认密码']}
2020-04-17 23:40:26,049 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:40:26,365 -- [test_register.py-->line:50] - ERROR: 用例--两遍密码不一致--执行未通过
2020-04-17 23:40:26,365 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:40:26,365 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'password_confirm': ['仅允许6~20个字符的确认密码']}
2020-04-17 23:40:26,365 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:40:26,682 -- [test_register.py-->line:50] - ERROR: 用例--密码为中文--执行未通过
2020-04-17 23:40:26,682 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:40:26,682 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'non_field_errors': ['两次输入密码不正确']}
2020-04-17 23:40:26,682 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:40:26,998 -- [test_register.py-->line:50] - ERROR: 用例--确认密码为中文--执行未通过
2020-04-17 23:40:26,998 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:40:26,998 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'non_field_errors': ['两次输入密码不正确']}
2020-04-17 23:40:26,998 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:43:03,500 -- [test_register.py-->line:58] - INFO: 用例--注册成功-用户名包含英文和数字--执行通过
2020-04-17 23:43:03,939 -- [test_register.py-->line:58] - INFO: 用例--注册成功-用户名包含中文--执行通过
2020-04-17 23:43:04,271 -- [test_register.py-->line:50] - ERROR: 用例--注册成功-用户名为纯英文--执行未通过
2020-04-17 23:43:04,271 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'username': 'littlelemon'}
2020-04-17 23:43:04,271 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'username': ['已存在一位使用该名字的用户。']}
2020-04-17 23:43:04,271 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:43:04,587 -- [test_register.py-->line:50] - ERROR: 用例--注册成功-用户名包含中文--执行未通过
2020-04-17 23:43:04,587 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'username': '哈哈哈哈哈哈哈'}
2020-04-17 23:43:04,587 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'username': ['已存在一位使用该名字的用户。']}
2020-04-17 23:43:04,587 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:43:04,904 -- [test_register.py-->line:50] - ERROR: 用例--已注册的用户名--执行未通过
2020-04-17 23:43:04,904 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:43:04,904 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'username': ['已存在一位使用该名字的用户。']}
2020-04-17 23:43:04,904 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:43:05,226 -- [test_register.py-->line:50] - ERROR: 用例--已注册的邮箱--执行未通过
2020-04-17 23:43:05,226 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:43:05,226 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'email': ['此邮箱已注册']}
2020-04-17 23:43:05,226 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:43:05,543 -- [test_register.py-->line:50] - ERROR: 用例--用户名小于6位--执行未通过
2020-04-17 23:43:05,543 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:43:05,543 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'username': ['仅允许6-20个字符的用户名']}
2020-04-17 23:43:05,543 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:43:05,859 -- [test_register.py-->line:50] - ERROR: 用例--邮箱格式错误--执行未通过
2020-04-17 23:43:05,859 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:43:05,859 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'email': ['请输入合法的邮件地址。']}
2020-04-17 23:43:05,859 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:43:06,176 -- [test_register.py-->line:50] - ERROR: 用例--用户名大于20位--执行未通过
2020-04-17 23:43:06,176 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:43:06,176 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'username': ['仅允许6-20个字符的用户名']}
2020-04-17 23:43:06,176 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:43:06,492 -- [test_register.py-->line:50] - ERROR: 用例--密码小于6位--执行未通过
2020-04-17 23:43:06,492 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:43:06,492 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'password': ['仅允许6-20个字符的密码'], 'password_confirm': ['仅允许6~20个字符的确认密码']}
2020-04-17 23:43:06,492 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:43:06,809 -- [test_register.py-->line:50] - ERROR: 用例--密码大于20位--执行未通过
2020-04-17 23:43:06,809 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:43:06,809 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'password': ['仅允许6-20个字符的密码'], 'password_confirm': ['仅允许6~20个字符的确认密码']}
2020-04-17 23:43:06,809 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:43:07,131 -- [test_register.py-->line:50] - ERROR: 用例--两遍密码不一致--执行未通过
2020-04-17 23:43:07,131 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:43:07,131 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'password_confirm': ['仅允许6~20个字符的确认密码']}
2020-04-17 23:43:07,131 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:43:07,448 -- [test_register.py-->line:50] - ERROR: 用例--密码为中文--执行未通过
2020-04-17 23:43:07,448 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:43:07,448 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'non_field_errors': ['两次输入密码不正确']}
2020-04-17 23:43:07,448 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:43:07,764 -- [test_register.py-->line:50] - ERROR: 用例--确认密码为中文--执行未通过
2020-04-17 23:43:07,764 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:43:07,764 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'non_field_errors': ['两次输入密码不正确']}
2020-04-17 23:43:07,764 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:49:09,283 -- [test_register.py-->line:58] - INFO: 用例--注册成功-用户名包含英文和数字--执行通过
2020-04-17 23:49:09,731 -- [test_register.py-->line:58] - INFO: 用例--注册成功-用户名包含中文--执行通过
2020-04-17 23:49:10,054 -- [test_register.py-->line:50] - ERROR: 用例--注册成功-用户名为纯英文--执行未通过
2020-04-17 23:49:10,054 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'username': 'littlelemon'}
2020-04-17 23:49:10,054 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'username': ['已存在一位使用该名字的用户。']}
2020-04-17 23:49:10,054 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:49:10,386 -- [test_register.py-->line:50] - ERROR: 用例--注册成功-用户名包含中文--执行未通过
2020-04-17 23:49:10,386 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'username': '哈哈哈哈哈哈哈'}
2020-04-17 23:49:10,386 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'username': ['已存在一位使用该名字的用户。']}
2020-04-17 23:49:10,386 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:49:10,702 -- [test_register.py-->line:50] - ERROR: 用例--已注册的用户名--执行未通过
2020-04-17 23:49:10,702 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'username': '已存在一位使用该名字的用户'}
2020-04-17 23:49:10,702 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'username': ['已存在一位使用该名字的用户。']}
2020-04-17 23:49:10,702 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:49:11,034 -- [test_register.py-->line:50] - ERROR: 用例--已注册的邮箱--执行未通过
2020-04-17 23:49:11,034 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'email': '此邮箱已注册'}
2020-04-17 23:49:11,034 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'email': ['此邮箱已注册']}
2020-04-17 23:49:11,034 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:49:11,357 -- [test_register.py-->line:50] - ERROR: 用例--用户名小于6位--执行未通过
2020-04-17 23:49:11,357 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'username': '仅允许6-20个字符的用户名'}
2020-04-17 23:49:11,372 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'username': ['仅允许6-20个字符的用户名']}
2020-04-17 23:49:11,372 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:49:11,689 -- [test_register.py-->line:50] - ERROR: 用例--邮箱格式错误--执行未通过
2020-04-17 23:49:11,689 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'status_code': '400'}
2020-04-17 23:49:11,689 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'email': ['请输入合法的邮件地址。']}
2020-04-17 23:49:11,689 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:49:12,020 -- [test_register.py-->line:50] - ERROR: 用例--用户名大于20位--执行未通过
2020-04-17 23:49:12,020 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'username': '仅允许6-20个字符的用户名'}
2020-04-17 23:49:12,020 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'username': ['仅允许6-20个字符的用户名']}
2020-04-17 23:49:12,020 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:49:12,353 -- [test_register.py-->line:50] - ERROR: 用例--密码小于6位--执行未通过
2020-04-17 23:49:12,353 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'password': '仅允许6-20个字符的密码'}
2020-04-17 23:49:12,353 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'password': ['仅允许6-20个字符的密码'], 'password_confirm': ['仅允许6~20个字符的确认密码']}
2020-04-17 23:49:12,353 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:49:12,675 -- [test_register.py-->line:50] - ERROR: 用例--密码大于20位--执行未通过
2020-04-17 23:49:12,675 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'password': '仅允许6-20个字符的密码'}
2020-04-17 23:49:12,675 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'password': ['仅允许6-20个字符的密码'], 'password_confirm': ['仅允许6~20个字符的确认密码']}
2020-04-17 23:49:12,675 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:49:12,991 -- [test_register.py-->line:50] - ERROR: 用例--两遍密码不一致--执行未通过
2020-04-17 23:49:12,991 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'password_confirm': '仅允许6~20个字符的确认密码'}
2020-04-17 23:49:12,991 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'password_confirm': ['仅允许6~20个字符的确认密码']}
2020-04-17 23:49:12,991 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:49:13,308 -- [test_register.py-->line:50] - ERROR: 用例--密码为中文--执行未通过
2020-04-17 23:49:13,308 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'non_field_errors': '两次输入密码不正确'}
2020-04-17 23:49:13,308 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'non_field_errors': ['两次输入密码不正确']}
2020-04-17 23:49:13,308 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:49:13,624 -- [test_register.py-->line:50] - ERROR: 用例--确认密码为中文--执行未通过
2020-04-17 23:49:13,624 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'non_field_errors': '两次输入密码不正确'}
2020-04-17 23:49:13,624 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'non_field_errors': ['两次输入密码不正确']}
2020-04-17 23:49:13,624 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:51:07,376 -- [test_register.py-->line:58] - INFO: 用例--注册成功-用户名包含英文和数字--执行通过
2020-04-17 23:51:07,800 -- [test_register.py-->line:58] - INFO: 用例--注册成功-用户名包含中文--执行通过
2020-04-17 23:51:08,116 -- [test_register.py-->line:50] - ERROR: 用例--注册成功-用户名为纯英文--执行未通过
2020-04-17 23:51:08,116 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'username': 'littlelemon'}
2020-04-17 23:51:08,116 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'username': ['已存在一位使用该名字的用户。']}
2020-04-17 23:51:08,116 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:51:08,432 -- [test_register.py-->line:50] - ERROR: 用例--注册成功-用户名包含中文--执行未通过
2020-04-17 23:51:08,432 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'username': '哈哈哈哈哈哈哈'}
2020-04-17 23:51:08,432 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'username': ['已存在一位使用该名字的用户。']}
2020-04-17 23:51:08,432 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:51:08,733 -- [test_register.py-->line:50] - ERROR: 用例--已注册的用户名--执行未通过
2020-04-17 23:51:08,733 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'username': '[已存在一位使用该名字的用户]'}
2020-04-17 23:51:08,733 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'username': ['已存在一位使用该名字的用户。']}
2020-04-17 23:51:08,733 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:51:09,050 -- [test_register.py-->line:58] - INFO: 用例--已注册的邮箱--执行通过
2020-04-17 23:51:09,350 -- [test_register.py-->line:50] - ERROR: 用例--用户名小于6位--执行未通过
2020-04-17 23:51:09,350 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'username': '[仅允许6-20个字符的用户名]'}
2020-04-17 23:51:09,350 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'username': ['仅允许6-20个字符的用户名']}
2020-04-17 23:51:09,350 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:51:09,667 -- [test_register.py-->line:58] - INFO: 用例--邮箱格式错误--执行通过
2020-04-17 23:51:09,968 -- [test_register.py-->line:50] - ERROR: 用例--用户名大于20位--执行未通过
2020-04-17 23:51:09,968 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'username': '[仅允许6-20个字符的用户名]'}
2020-04-17 23:51:09,968 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'username': ['仅允许6-20个字符的用户名']}
2020-04-17 23:51:09,968 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:51:10,284 -- [test_register.py-->line:50] - ERROR: 用例--密码小于6位--执行未通过
2020-04-17 23:51:10,284 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'password': '[仅允许6-20个字符的密码]'}
2020-04-17 23:51:10,284 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'password': ['仅允许6-20个字符的密码'], 'password_confirm': ['仅允许6~20个字符的确认密码']}
2020-04-17 23:51:10,284 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:51:10,600 -- [test_register.py-->line:50] - ERROR: 用例--密码大于20位--执行未通过
2020-04-17 23:51:10,600 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'password': '[仅允许6-20个字符的密码]'}
2020-04-17 23:51:10,600 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'password': ['仅允许6-20个字符的密码'], 'password_confirm': ['仅允许6~20个字符的确认密码']}
2020-04-17 23:51:10,600 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:51:10,908 -- [test_register.py-->line:58] - INFO: 用例--两遍密码不一致--执行通过
2020-04-17 23:51:11,209 -- [test_register.py-->line:58] - INFO: 用例--密码为中文--执行通过
2020-04-17 23:51:11,525 -- [test_register.py-->line:58] - INFO: 用例--确认密码为中文--执行通过
2020-04-17 23:52:48,092 -- [test_register.py-->line:58] - INFO: 用例--注册成功-用户名包含英文和数字--执行通过
2020-04-17 23:52:48,524 -- [test_register.py-->line:58] - INFO: 用例--注册成功-用户名包含中文--执行通过
2020-04-17 23:52:48,841 -- [test_register.py-->line:50] - ERROR: 用例--注册成功-用户名为纯英文--执行未通过
2020-04-17 23:52:48,841 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'username': 'littlelemon'}
2020-04-17 23:52:48,841 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'username': ['已存在一位使用该名字的用户。']}
2020-04-17 23:52:48,841 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:52:49,161 -- [test_register.py-->line:50] - ERROR: 用例--注册成功-用户名包含中文--执行未通过
2020-04-17 23:52:49,161 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'username': '哈哈哈哈哈哈哈'}
2020-04-17 23:52:49,161 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'username': ['已存在一位使用该名字的用户。']}
2020-04-17 23:52:49,161 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:52:49,482 -- [test_register.py-->line:50] - ERROR: 用例--已注册的用户名--执行未通过
2020-04-17 23:52:49,482 -- [test_register.py-->line:51] - DEBUG: 预期结果：{'username': '[已存在一位使用该名字的用户]'}
2020-04-17 23:52:49,482 -- [test_register.py-->line:52] - DEBUG: 实际结果：{'username': ['已存在一位使用该名字的用户。']}
2020-04-17 23:52:49,482 -- [test_register.py-->line:53] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_register.py", line 41, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-17 23:52:49,774 -- [test_register.py-->line:58] - INFO: 用例--已注册的邮箱--执行通过
2020-04-17 23:52:50,090 -- [test_register.py-->line:58] - INFO: 用例--用户名小于6位--执行通过
2020-04-17 23:52:50,393 -- [test_register.py-->line:58] - INFO: 用例--邮箱格式错误--执行通过
2020-04-17 23:52:50,710 -- [test_register.py-->line:58] - INFO: 用例--用户名大于20位--执行通过
2020-04-17 23:52:51,025 -- [test_register.py-->line:58] - INFO: 用例--密码小于6位--执行通过
2020-04-17 23:52:51,342 -- [test_register.py-->line:58] - INFO: 用例--密码大于20位--执行通过
2020-04-17 23:52:51,658 -- [test_register.py-->line:58] - INFO: 用例--两遍密码不一致--执行通过
2020-04-17 23:52:51,974 -- [test_register.py-->line:58] - INFO: 用例--密码为中文--执行通过
2020-04-17 23:52:52,275 -- [test_register.py-->line:58] - INFO: 用例--确认密码为中文--执行通过
2020-04-17 23:54:01,900 -- [test_register.py-->line:58] - INFO: 用例--注册成功-用户名包含英文和数字--执行通过
2020-04-17 23:54:02,339 -- [test_register.py-->line:58] - INFO: 用例--注册成功-用户名包含中文--执行通过
2020-04-17 23:54:02,671 -- [test_register.py-->line:58] - INFO: 用例--注册成功-用户名为纯英文--执行通过
2020-04-17 23:54:02,972 -- [test_register.py-->line:58] - INFO: 用例--注册成功-用户名包含中文--执行通过
2020-04-17 23:54:03,320 -- [test_register.py-->line:58] - INFO: 用例--已注册的用户名--执行通过
2020-04-17 23:54:03,620 -- [test_register.py-->line:58] - INFO: 用例--已注册的邮箱--执行通过
2020-04-17 23:54:03,930 -- [test_register.py-->line:58] - INFO: 用例--用户名小于6位--执行通过
2020-04-17 23:54:04,249 -- [test_register.py-->line:58] - INFO: 用例--邮箱格式错误--执行通过
2020-04-17 23:54:04,566 -- [test_register.py-->line:58] - INFO: 用例--用户名大于20位--执行通过
2020-04-17 23:54:04,883 -- [test_register.py-->line:58] - INFO: 用例--密码小于6位--执行通过
2020-04-17 23:54:05,185 -- [test_register.py-->line:58] - INFO: 用例--密码大于20位--执行通过
2020-04-17 23:54:05,502 -- [test_register.py-->line:58] - INFO: 用例--两遍密码不一致--执行通过
2020-04-17 23:54:05,806 -- [test_register.py-->line:58] - INFO: 用例--密码为中文--执行通过
2020-04-17 23:54:06,113 -- [test_register.py-->line:58] - INFO: 用例--确认密码为中文--执行通过
2020-04-17 23:54:47,437 -- [Run_test.py-->line:6] - INFO: ---------------开始执行测试用例-----------------------
2020-04-17 23:54:48,737 -- [test_register.py-->line:58] - INFO: 用例--注册成功-用户名包含英文和数字--执行通过
2020-04-17 23:54:49,207 -- [test_register.py-->line:58] - INFO: 用例--注册成功-用户名包含中文--执行通过
2020-04-17 23:54:49,524 -- [test_register.py-->line:58] - INFO: 用例--注册成功-用户名为纯英文--执行通过
2020-04-17 23:54:49,840 -- [test_register.py-->line:58] - INFO: 用例--注册成功-用户名包含中文--执行通过
2020-04-17 23:54:50,172 -- [test_register.py-->line:58] - INFO: 用例--已注册的用户名--执行通过
2020-04-17 23:54:50,497 -- [test_register.py-->line:58] - INFO: 用例--已注册的邮箱--执行通过
2020-04-17 23:54:50,813 -- [test_register.py-->line:58] - INFO: 用例--用户名小于6位--执行通过
2020-04-17 23:54:51,136 -- [test_register.py-->line:58] - INFO: 用例--邮箱格式错误--执行通过
2020-04-17 23:54:51,453 -- [test_register.py-->line:58] - INFO: 用例--用户名大于20位--执行通过
2020-04-17 23:54:51,769 -- [test_register.py-->line:58] - INFO: 用例--密码小于6位--执行通过
2020-04-17 23:54:52,101 -- [test_register.py-->line:58] - INFO: 用例--密码大于20位--执行通过
2020-04-17 23:54:52,421 -- [test_register.py-->line:58] - INFO: 用例--两遍密码不一致--执行通过
2020-04-17 23:54:52,760 -- [test_register.py-->line:58] - INFO: 用例--密码为中文--执行通过
2020-04-17 23:54:53,084 -- [test_register.py-->line:58] - INFO: 用例--确认密码为中文--执行通过
2020-04-17 23:54:53,154 -- [Run_test.py-->line:21] - INFO: ---------------测试用例执行完毕-----------------------
2020-04-18 00:22:12,818 -- [test_login.py-->line:39] - INFO: 用例--登录成功--执行通过
2020-04-18 00:22:12,971 -- [test_login.py-->line:39] - INFO: 用例--用户名为空--执行通过
2020-04-18 00:22:13,128 -- [test_login.py-->line:39] - INFO: 用例--密码为空--执行通过
2020-04-18 00:22:13,404 -- [test_login.py-->line:39] - INFO: 用例--用户名未注册--执行通过
2020-04-18 00:22:13,679 -- [test_login.py-->line:39] - INFO: 用例--密码错误--执行通过
2020-04-18 00:22:13,958 -- [test_login.py-->line:39] - INFO: 用例--用户名格式错误--执行通过
2020-04-19 18:22:20,806 -- [terst_username.py-->line:39] - INFO: 用例--已注册用户名--执行通过
2020-04-19 18:22:20,944 -- [terst_username.py-->line:39] - INFO: 用例--未注册用户名--执行通过
2020-04-19 18:23:14,422 -- [test_eamil.py-->line:39] - INFO: 用例--已注册用户名--执行通过
2020-04-19 18:23:14,559 -- [test_eamil.py-->line:39] - INFO: 用例--未注册用户名--执行通过
2020-04-20 11:33:59,354 -- [test_projects.py-->line:67] - INFO: 用例--创建项目名称为空--执行通过
2020-04-20 11:33:59,473 -- [test_projects.py-->line:67] - INFO: 用例--创建项目名称超过200字符--执行通过
2020-04-20 11:33:59,592 -- [test_projects.py-->line:59] - ERROR: 用例--leader为空--执行未通过
2020-04-20 11:33:59,592 -- [test_projects.py-->line:60] - DEBUG: 预期结果：{'leader': ['该字段不能为空。']}
2020-04-20 11:33:59,593 -- [test_projects.py-->line:61] - DEBUG: 实际结果：{'name': ['具有 项目名称 的 项目信息 已存在。']}
2020-04-20 11:33:59,593 -- [test_projects.py-->line:62] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_projects.py", line 53, in test_project
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 11:33:59,712 -- [test_projects.py-->line:67] - INFO: 用例--leader超过50字符--执行通过
2020-04-20 11:33:59,840 -- [test_projects.py-->line:67] - INFO: 用例--tester为空--执行通过
2020-04-20 11:33:59,959 -- [test_projects.py-->line:67] - INFO: 用例--tester超过50字符--执行通过
2020-04-20 11:34:00,080 -- [test_projects.py-->line:67] - INFO: 用例--programmer为空--执行通过
2020-04-20 11:34:00,192 -- [test_projects.py-->line:67] - INFO: 用例--programmer超过50字符--执行通过
2020-04-20 11:34:00,330 -- [test_projects.py-->line:67] - INFO: 用例--publish_app为空--执行通过
2020-04-20 11:34:00,449 -- [test_projects.py-->line:67] - INFO: 用例--publish_app超过100字符--执行通过
2020-04-20 11:45:49,629 -- [test_projects.py-->line:61] - ERROR: 用例--创建项目成功--执行未通过
2020-04-20 11:45:49,630 -- [test_projects.py-->line:62] - DEBUG: 预期结果：{'name': '#name#'}
2020-04-20 11:45:49,630 -- [test_projects.py-->line:63] - DEBUG: 实际结果：{'id': 10612, 'create_time': '2020-04-20T11:45:42.038939+08:00', 'name': 'fls46444', 'leader': 'fls530', 'tester': 'fls530', 'programmer': 'fls530', 'publish_app': 'test', 'desc': 'test'}
2020-04-20 11:45:49,631 -- [test_projects.py-->line:64] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_projects.py", line 55, in test_project
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 11:45:49,739 -- [test_projects.py-->line:69] - INFO: 用例--创建已存在项目--执行通过
2020-04-20 11:45:49,847 -- [test_projects.py-->line:69] - INFO: 用例--创建项目名称为空--执行通过
2020-04-20 11:45:49,968 -- [test_projects.py-->line:69] - INFO: 用例--创建项目名称超过200字符--执行通过
2020-04-20 11:45:50,074 -- [test_projects.py-->line:61] - ERROR: 用例--leader为空--执行未通过
2020-04-20 11:45:50,074 -- [test_projects.py-->line:62] - DEBUG: 预期结果：{'leader': ['该字段不能为空。']}
2020-04-20 11:45:50,074 -- [test_projects.py-->line:63] - DEBUG: 实际结果：{'name': ['具有 项目名称 的 项目信息 已存在。']}
2020-04-20 11:45:50,075 -- [test_projects.py-->line:64] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_projects.py", line 55, in test_project
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 11:45:50,176 -- [test_projects.py-->line:69] - INFO: 用例--leader超过50字符--执行通过
2020-04-20 11:45:50,286 -- [test_projects.py-->line:69] - INFO: 用例--tester为空--执行通过
2020-04-20 11:45:50,398 -- [test_projects.py-->line:69] - INFO: 用例--tester超过50字符--执行通过
2020-04-20 11:45:50,508 -- [test_projects.py-->line:69] - INFO: 用例--programmer为空--执行通过
2020-04-20 11:45:50,614 -- [test_projects.py-->line:69] - INFO: 用例--programmer超过50字符--执行通过
2020-04-20 11:45:50,721 -- [test_projects.py-->line:69] - INFO: 用例--publish_app为空--执行通过
2020-04-20 11:45:50,820 -- [test_projects.py-->line:69] - INFO: 用例--publish_app超过100字符--执行通过
2020-04-20 11:45:50,922 -- [test_projects.py-->line:61] - ERROR: 用例--传desc--执行未通过
2020-04-20 11:45:50,922 -- [test_projects.py-->line:62] - DEBUG: 预期结果：{'desc': 'XXX'}
2020-04-20 11:45:50,922 -- [test_projects.py-->line:63] - DEBUG: 实际结果：{'name': ['具有 项目名称 的 项目信息 已存在。']}
2020-04-20 11:45:50,922 -- [test_projects.py-->line:64] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_projects.py", line 55, in test_project
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 11:45:51,019 -- [test_projects.py-->line:61] - ERROR: 用例--不传desc--执行未通过
2020-04-20 11:45:51,019 -- [test_projects.py-->line:62] - DEBUG: 预期结果：{'desc': ''}
2020-04-20 11:45:51,019 -- [test_projects.py-->line:63] - DEBUG: 实际结果：{'name': ['具有 项目名称 的 项目信息 已存在。']}
2020-04-20 11:45:51,019 -- [test_projects.py-->line:64] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_projects.py", line 55, in test_project
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 11:46:19,377 -- [test_projects.py-->line:61] - ERROR: 用例--创建项目成功--执行未通过
2020-04-20 11:46:19,377 -- [test_projects.py-->line:62] - DEBUG: 预期结果：{'name': '#name#'}
2020-04-20 11:46:19,377 -- [test_projects.py-->line:63] - DEBUG: 实际结果：{'id': 10613, 'create_time': '2020-04-20T11:46:11.791060+08:00', 'name': 'fls50294', 'leader': 'fls530', 'tester': 'fls530', 'programmer': 'fls530', 'publish_app': 'test', 'desc': 'test'}
2020-04-20 11:46:19,378 -- [test_projects.py-->line:64] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_projects.py", line 55, in test_project
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 11:46:19,492 -- [test_projects.py-->line:69] - INFO: 用例--创建已存在项目--执行通过
2020-04-20 11:46:19,606 -- [test_projects.py-->line:69] - INFO: 用例--创建项目名称为空--执行通过
2020-04-20 11:46:19,720 -- [test_projects.py-->line:69] - INFO: 用例--创建项目名称超过200字符--执行通过
2020-04-20 11:46:19,831 -- [test_projects.py-->line:61] - ERROR: 用例--leader为空--执行未通过
2020-04-20 11:46:19,831 -- [test_projects.py-->line:62] - DEBUG: 预期结果：{'leader': ['该字段不能为空。']}
2020-04-20 11:46:19,831 -- [test_projects.py-->line:63] - DEBUG: 实际结果：{'name': ['具有 项目名称 的 项目信息 已存在。']}
2020-04-20 11:46:19,832 -- [test_projects.py-->line:64] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_projects.py", line 55, in test_project
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 11:46:19,958 -- [test_projects.py-->line:69] - INFO: 用例--leader超过50字符--执行通过
2020-04-20 11:46:20,086 -- [test_projects.py-->line:69] - INFO: 用例--tester为空--执行通过
2020-04-20 11:46:20,199 -- [test_projects.py-->line:69] - INFO: 用例--tester超过50字符--执行通过
2020-04-20 11:46:20,310 -- [test_projects.py-->line:69] - INFO: 用例--programmer为空--执行通过
2020-04-20 11:46:20,431 -- [test_projects.py-->line:69] - INFO: 用例--programmer超过50字符--执行通过
2020-04-20 11:46:20,571 -- [test_projects.py-->line:69] - INFO: 用例--publish_app为空--执行通过
2020-04-20 11:46:20,682 -- [test_projects.py-->line:69] - INFO: 用例--publish_app超过100字符--执行通过
2020-04-20 11:46:20,791 -- [test_projects.py-->line:61] - ERROR: 用例--传desc--执行未通过
2020-04-20 11:46:20,791 -- [test_projects.py-->line:62] - DEBUG: 预期结果：{'desc': 'XXX'}
2020-04-20 11:46:20,791 -- [test_projects.py-->line:63] - DEBUG: 实际结果：{'name': ['具有 项目名称 的 项目信息 已存在。']}
2020-04-20 11:46:20,791 -- [test_projects.py-->line:64] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_projects.py", line 55, in test_project
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 11:46:20,919 -- [test_projects.py-->line:61] - ERROR: 用例--不传desc--执行未通过
2020-04-20 11:46:20,919 -- [test_projects.py-->line:62] - DEBUG: 预期结果：{'desc': ''}
2020-04-20 11:46:20,919 -- [test_projects.py-->line:63] - DEBUG: 实际结果：{'name': ['具有 项目名称 的 项目信息 已存在。']}
2020-04-20 11:46:20,919 -- [test_projects.py-->line:64] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_projects.py", line 55, in test_project
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 12:58:04,518 -- [test_projects.py-->line:61] - ERROR: 用例--创建项目成功--执行未通过
2020-04-20 12:58:04,519 -- [test_projects.py-->line:62] - DEBUG: 预期结果：{'name': '#name#'}
2020-04-20 12:58:04,519 -- [test_projects.py-->line:63] - DEBUG: 实际结果：{'id': 10614, 'create_time': '2020-04-20T12:57:56.945710+08:00', 'name': 'fls16130', 'leader': 'fls530', 'tester': 'fls530', 'programmer': 'fls530', 'publish_app': 'test', 'desc': 'test'}
2020-04-20 12:58:04,519 -- [test_projects.py-->line:64] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_projects.py", line 55, in test_project
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 12:58:04,629 -- [test_projects.py-->line:69] - INFO: 用例--创建已存在项目--执行通过
2020-04-20 12:58:04,733 -- [test_projects.py-->line:69] - INFO: 用例--创建项目名称为空--执行通过
2020-04-20 12:58:04,845 -- [test_projects.py-->line:69] - INFO: 用例--创建项目名称超过200字符--执行通过
2020-04-20 13:00:11,102 -- [test_projects.py-->line:69] - INFO: 用例--创建项目成功--执行通过
2020-04-20 13:00:11,210 -- [test_projects.py-->line:69] - INFO: 用例--创建已存在项目--执行通过
2020-04-20 13:00:11,315 -- [test_projects.py-->line:69] - INFO: 用例--创建项目名称为空--执行通过
2020-04-20 13:00:11,421 -- [test_projects.py-->line:69] - INFO: 用例--创建项目名称超过200字符--执行通过
2020-04-20 13:00:11,529 -- [test_projects.py-->line:61] - ERROR: 用例--leader为空--执行未通过
2020-04-20 13:00:11,529 -- [test_projects.py-->line:62] - DEBUG: 预期结果：{'leader': ['该字段不能为空。']}
2020-04-20 13:00:11,530 -- [test_projects.py-->line:63] - DEBUG: 实际结果：{'name': ['具有 项目名称 的 项目信息 已存在。']}
2020-04-20 13:00:11,530 -- [test_projects.py-->line:64] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_projects.py", line 55, in test_project
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 13:00:11,643 -- [test_projects.py-->line:69] - INFO: 用例--leader超过50字符--执行通过
2020-04-20 13:00:11,759 -- [test_projects.py-->line:69] - INFO: 用例--tester为空--执行通过
2020-04-20 13:00:11,860 -- [test_projects.py-->line:69] - INFO: 用例--tester超过50字符--执行通过
2020-04-20 13:00:11,964 -- [test_projects.py-->line:69] - INFO: 用例--programmer为空--执行通过
2020-04-20 13:00:12,077 -- [test_projects.py-->line:69] - INFO: 用例--programmer超过50字符--执行通过
2020-04-20 13:00:12,233 -- [test_projects.py-->line:69] - INFO: 用例--publish_app为空--执行通过
2020-04-20 13:00:12,334 -- [test_projects.py-->line:69] - INFO: 用例--publish_app超过100字符--执行通过
2020-04-20 13:00:12,440 -- [test_projects.py-->line:61] - ERROR: 用例--传desc--执行未通过
2020-04-20 13:00:12,441 -- [test_projects.py-->line:62] - DEBUG: 预期结果：{'desc': 'XXX'}
2020-04-20 13:00:12,441 -- [test_projects.py-->line:63] - DEBUG: 实际结果：{'name': ['具有 项目名称 的 项目信息 已存在。']}
2020-04-20 13:00:12,442 -- [test_projects.py-->line:64] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_projects.py", line 55, in test_project
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 13:00:12,548 -- [test_projects.py-->line:61] - ERROR: 用例--不传desc--执行未通过
2020-04-20 13:00:12,548 -- [test_projects.py-->line:62] - DEBUG: 预期结果：{'desc': ''}
2020-04-20 13:00:12,548 -- [test_projects.py-->line:63] - DEBUG: 实际结果：{'name': ['具有 项目名称 的 项目信息 已存在。']}
2020-04-20 13:00:12,548 -- [test_projects.py-->line:64] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_projects.py", line 55, in test_project
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 13:00:30,356 -- [test_projects.py-->line:69] - INFO: 用例--创建项目成功--执行通过
2020-04-20 13:00:30,472 -- [test_projects.py-->line:69] - INFO: 用例--创建已存在项目--执行通过
2020-04-20 13:00:30,581 -- [test_projects.py-->line:69] - INFO: 用例--创建项目名称为空--执行通过
2020-04-20 13:00:30,701 -- [test_projects.py-->line:69] - INFO: 用例--创建项目名称超过200字符--执行通过
2020-04-20 13:00:30,815 -- [test_projects.py-->line:61] - ERROR: 用例--leader为空--执行未通过
2020-04-20 13:00:30,815 -- [test_projects.py-->line:62] - DEBUG: 预期结果：{'leader': ['该字段不能为空。']}
2020-04-20 13:00:30,816 -- [test_projects.py-->line:63] - DEBUG: 实际结果：{'name': ['具有 项目名称 的 项目信息 已存在。']}
2020-04-20 13:00:30,816 -- [test_projects.py-->line:64] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_projects.py", line 55, in test_project
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 13:00:30,933 -- [test_projects.py-->line:69] - INFO: 用例--leader超过50字符--执行通过
2020-04-20 13:00:31,050 -- [test_projects.py-->line:69] - INFO: 用例--tester为空--执行通过
2020-04-20 13:00:31,160 -- [test_projects.py-->line:69] - INFO: 用例--tester超过50字符--执行通过
2020-04-20 13:00:31,285 -- [test_projects.py-->line:69] - INFO: 用例--programmer为空--执行通过
2020-04-20 13:00:31,401 -- [test_projects.py-->line:69] - INFO: 用例--programmer超过50字符--执行通过
2020-04-20 13:00:31,515 -- [test_projects.py-->line:69] - INFO: 用例--publish_app为空--执行通过
2020-04-20 13:00:31,628 -- [test_projects.py-->line:69] - INFO: 用例--publish_app超过100字符--执行通过
2020-04-20 13:00:31,768 -- [test_projects.py-->line:61] - ERROR: 用例--传desc--执行未通过
2020-04-20 13:00:31,769 -- [test_projects.py-->line:62] - DEBUG: 预期结果：{'desc': 'XXX'}
2020-04-20 13:00:31,769 -- [test_projects.py-->line:63] - DEBUG: 实际结果：{'name': ['具有 项目名称 的 项目信息 已存在。']}
2020-04-20 13:00:31,770 -- [test_projects.py-->line:64] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_projects.py", line 55, in test_project
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 13:00:31,917 -- [test_projects.py-->line:61] - ERROR: 用例--不传desc--执行未通过
2020-04-20 13:00:31,917 -- [test_projects.py-->line:62] - DEBUG: 预期结果：{'desc': ''}
2020-04-20 13:00:31,917 -- [test_projects.py-->line:63] - DEBUG: 实际结果：{'name': ['具有 项目名称 的 项目信息 已存在。']}
2020-04-20 13:00:31,918 -- [test_projects.py-->line:64] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_projects.py", line 55, in test_project
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 13:02:39,821 -- [test_projects.py-->line:69] - INFO: 用例--创建项目成功--执行通过
2020-04-20 13:02:39,938 -- [test_projects.py-->line:69] - INFO: 用例--创建已存在项目--执行通过
2020-04-20 13:02:40,048 -- [test_projects.py-->line:69] - INFO: 用例--创建项目名称为空--执行通过
2020-04-20 13:02:40,167 -- [test_projects.py-->line:69] - INFO: 用例--创建项目名称超过200字符--执行通过
2020-04-20 13:02:40,285 -- [test_projects.py-->line:61] - ERROR: 用例--leader为空--执行未通过
2020-04-20 13:02:40,285 -- [test_projects.py-->line:62] - DEBUG: 预期结果：{'leader': ['该字段不能为空。']}
2020-04-20 13:02:40,285 -- [test_projects.py-->line:63] - DEBUG: 实际结果：{'name': ['具有 项目名称 的 项目信息 已存在。']}
2020-04-20 13:02:40,286 -- [test_projects.py-->line:64] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_projects.py", line 55, in test_project
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 13:02:40,404 -- [test_projects.py-->line:69] - INFO: 用例--leader超过50字符--执行通过
2020-04-20 13:02:40,533 -- [test_projects.py-->line:69] - INFO: 用例--tester为空--执行通过
2020-04-20 13:02:40,676 -- [test_projects.py-->line:69] - INFO: 用例--tester超过50字符--执行通过
2020-04-20 13:02:40,795 -- [test_projects.py-->line:69] - INFO: 用例--programmer为空--执行通过
2020-04-20 13:02:40,934 -- [test_projects.py-->line:69] - INFO: 用例--programmer超过50字符--执行通过
2020-04-20 13:02:41,071 -- [test_projects.py-->line:69] - INFO: 用例--publish_app为空--执行通过
2020-04-20 13:02:41,201 -- [test_projects.py-->line:69] - INFO: 用例--publish_app超过100字符--执行通过
2020-04-20 13:02:41,322 -- [test_projects.py-->line:61] - ERROR: 用例--传desc--执行未通过
2020-04-20 13:02:41,323 -- [test_projects.py-->line:62] - DEBUG: 预期结果：{'desc': 'XXX'}
2020-04-20 13:02:41,323 -- [test_projects.py-->line:63] - DEBUG: 实际结果：{'name': ['具有 项目名称 的 项目信息 已存在。']}
2020-04-20 13:02:41,324 -- [test_projects.py-->line:64] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_projects.py", line 55, in test_project
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 13:02:41,440 -- [test_projects.py-->line:61] - ERROR: 用例--不传desc--执行未通过
2020-04-20 13:02:41,440 -- [test_projects.py-->line:62] - DEBUG: 预期结果：{'desc': ''}
2020-04-20 13:02:41,441 -- [test_projects.py-->line:63] - DEBUG: 实际结果：{'name': ['具有 项目名称 的 项目信息 已存在。']}
2020-04-20 13:02:41,441 -- [test_projects.py-->line:64] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_projects.py", line 55, in test_project
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 13:02:52,514 -- [test_projects.py-->line:69] - INFO: 用例--创建项目成功--执行通过
2020-04-20 13:02:52,629 -- [test_projects.py-->line:69] - INFO: 用例--创建已存在项目--执行通过
2020-04-20 13:02:52,753 -- [test_projects.py-->line:69] - INFO: 用例--创建项目名称为空--执行通过
2020-04-20 13:02:52,866 -- [test_projects.py-->line:69] - INFO: 用例--创建项目名称超过200字符--执行通过
2020-04-20 13:02:52,974 -- [test_projects.py-->line:61] - ERROR: 用例--leader为空--执行未通过
2020-04-20 13:02:52,975 -- [test_projects.py-->line:62] - DEBUG: 预期结果：{'leader': ['该字段不能为空。']}
2020-04-20 13:02:52,975 -- [test_projects.py-->line:63] - DEBUG: 实际结果：{'name': ['具有 项目名称 的 项目信息 已存在。']}
2020-04-20 13:02:52,975 -- [test_projects.py-->line:64] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_projects.py", line 55, in test_project
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 13:02:53,101 -- [test_projects.py-->line:69] - INFO: 用例--leader超过50字符--执行通过
2020-04-20 13:02:53,229 -- [test_projects.py-->line:69] - INFO: 用例--tester为空--执行通过
2020-04-20 13:02:53,359 -- [test_projects.py-->line:69] - INFO: 用例--tester超过50字符--执行通过
2020-04-20 13:02:53,477 -- [test_projects.py-->line:69] - INFO: 用例--programmer为空--执行通过
2020-04-20 13:02:53,597 -- [test_projects.py-->line:69] - INFO: 用例--programmer超过50字符--执行通过
2020-04-20 13:02:53,734 -- [test_projects.py-->line:69] - INFO: 用例--publish_app为空--执行通过
2020-04-20 13:02:53,877 -- [test_projects.py-->line:69] - INFO: 用例--publish_app超过100字符--执行通过
2020-04-20 13:02:54,006 -- [test_projects.py-->line:61] - ERROR: 用例--传desc--执行未通过
2020-04-20 13:02:54,007 -- [test_projects.py-->line:62] - DEBUG: 预期结果：{'desc': 'XXX'}
2020-04-20 13:02:54,007 -- [test_projects.py-->line:63] - DEBUG: 实际结果：{'name': ['具有 项目名称 的 项目信息 已存在。']}
2020-04-20 13:02:54,008 -- [test_projects.py-->line:64] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_projects.py", line 55, in test_project
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 13:02:54,124 -- [test_projects.py-->line:61] - ERROR: 用例--不传desc--执行未通过
2020-04-20 13:02:54,124 -- [test_projects.py-->line:62] - DEBUG: 预期结果：{'desc': ''}
2020-04-20 13:02:54,124 -- [test_projects.py-->line:63] - DEBUG: 实际结果：{'name': ['具有 项目名称 的 项目信息 已存在。']}
2020-04-20 13:02:54,124 -- [test_projects.py-->line:64] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_projects.py", line 55, in test_project
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 13:06:38,998 -- [test_projects.py-->line:69] - INFO: 用例--创建项目成功--执行通过
2020-04-20 13:06:39,099 -- [test_projects.py-->line:69] - INFO: 用例--创建已存在项目--执行通过
2020-04-20 13:06:39,199 -- [test_projects.py-->line:69] - INFO: 用例--创建项目名称为空--执行通过
2020-04-20 13:06:39,301 -- [test_projects.py-->line:69] - INFO: 用例--创建项目名称超过200字符--执行通过
2020-04-20 13:06:39,409 -- [test_projects.py-->line:61] - ERROR: 用例--leader为空--执行未通过
2020-04-20 13:06:39,409 -- [test_projects.py-->line:62] - DEBUG: 预期结果：{'leader': ['该字段不能为空。']}
2020-04-20 13:06:39,410 -- [test_projects.py-->line:63] - DEBUG: 实际结果：{'name': ['具有 项目名称 的 项目信息 已存在。']}
2020-04-20 13:06:39,410 -- [test_projects.py-->line:64] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_projects.py", line 55, in test_project
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 13:06:39,513 -- [test_projects.py-->line:69] - INFO: 用例--leader超过50字符--执行通过
2020-04-20 13:06:39,619 -- [test_projects.py-->line:69] - INFO: 用例--tester为空--执行通过
2020-04-20 13:06:39,725 -- [test_projects.py-->line:69] - INFO: 用例--tester超过50字符--执行通过
2020-04-20 13:06:39,832 -- [test_projects.py-->line:69] - INFO: 用例--programmer为空--执行通过
2020-04-20 13:06:39,939 -- [test_projects.py-->line:69] - INFO: 用例--programmer超过50字符--执行通过
2020-04-20 13:06:40,046 -- [test_projects.py-->line:69] - INFO: 用例--publish_app为空--执行通过
2020-04-20 13:06:40,151 -- [test_projects.py-->line:69] - INFO: 用例--publish_app超过100字符--执行通过
2020-04-20 13:06:40,258 -- [test_projects.py-->line:61] - ERROR: 用例--传desc--执行未通过
2020-04-20 13:06:40,258 -- [test_projects.py-->line:62] - DEBUG: 预期结果：{'desc': 'XXX'}
2020-04-20 13:06:40,259 -- [test_projects.py-->line:63] - DEBUG: 实际结果：{'name': ['具有 项目名称 的 项目信息 已存在。']}
2020-04-20 13:06:40,259 -- [test_projects.py-->line:64] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_projects.py", line 55, in test_project
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 13:06:40,357 -- [test_projects.py-->line:61] - ERROR: 用例--不传desc--执行未通过
2020-04-20 13:06:40,357 -- [test_projects.py-->line:62] - DEBUG: 预期结果：{'desc': ''}
2020-04-20 13:06:40,358 -- [test_projects.py-->line:63] - DEBUG: 实际结果：{'name': ['具有 项目名称 的 项目信息 已存在。']}
2020-04-20 13:06:40,358 -- [test_projects.py-->line:64] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_projects.py", line 55, in test_project
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 13:07:00,507 -- [test_projects.py-->line:69] - INFO: 用例--创建项目成功--执行通过
2020-04-20 13:07:00,626 -- [test_projects.py-->line:69] - INFO: 用例--创建已存在项目--执行通过
2020-04-20 13:07:00,745 -- [test_projects.py-->line:69] - INFO: 用例--创建项目名称为空--执行通过
2020-04-20 13:07:00,860 -- [test_projects.py-->line:69] - INFO: 用例--创建项目名称超过200字符--执行通过
2020-04-20 13:07:00,976 -- [test_projects.py-->line:61] - ERROR: 用例--leader为空--执行未通过
2020-04-20 13:07:00,976 -- [test_projects.py-->line:62] - DEBUG: 预期结果：{'leader': ['该字段不能为空。']}
2020-04-20 13:07:00,976 -- [test_projects.py-->line:63] - DEBUG: 实际结果：{'name': ['具有 项目名称 的 项目信息 已存在。']}
2020-04-20 13:07:00,976 -- [test_projects.py-->line:64] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_projects.py", line 55, in test_project
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 13:07:01,098 -- [test_projects.py-->line:69] - INFO: 用例--leader超过50字符--执行通过
2020-04-20 13:07:01,209 -- [test_projects.py-->line:69] - INFO: 用例--tester为空--执行通过
2020-04-20 13:07:01,325 -- [test_projects.py-->line:69] - INFO: 用例--tester超过50字符--执行通过
2020-04-20 13:07:01,441 -- [test_projects.py-->line:69] - INFO: 用例--programmer为空--执行通过
2020-04-20 13:07:01,592 -- [test_projects.py-->line:69] - INFO: 用例--programmer超过50字符--执行通过
2020-04-20 13:07:01,702 -- [test_projects.py-->line:69] - INFO: 用例--publish_app为空--执行通过
2020-04-20 13:07:01,830 -- [test_projects.py-->line:69] - INFO: 用例--publish_app超过100字符--执行通过
2020-04-20 13:07:01,957 -- [test_projects.py-->line:61] - ERROR: 用例--传desc--执行未通过
2020-04-20 13:07:01,957 -- [test_projects.py-->line:62] - DEBUG: 预期结果：{'desc': 'XXX'}
2020-04-20 13:07:01,957 -- [test_projects.py-->line:63] - DEBUG: 实际结果：{'name': ['具有 项目名称 的 项目信息 已存在。']}
2020-04-20 13:07:01,957 -- [test_projects.py-->line:64] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_projects.py", line 55, in test_project
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 13:07:02,062 -- [test_projects.py-->line:61] - ERROR: 用例--不传desc--执行未通过
2020-04-20 13:07:02,063 -- [test_projects.py-->line:62] - DEBUG: 预期结果：{'desc': ''}
2020-04-20 13:07:02,063 -- [test_projects.py-->line:63] - DEBUG: 实际结果：{'name': ['具有 项目名称 的 项目信息 已存在。']}
2020-04-20 13:07:02,063 -- [test_projects.py-->line:64] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_projects.py", line 55, in test_project
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 13:08:05,574 -- [test_projects.py-->line:69] - INFO: 用例--创建项目成功--执行通过
2020-04-20 13:08:18,400 -- [test_projects.py-->line:69] - INFO: 用例--创建已存在项目--执行通过
2020-04-20 13:08:22,822 -- [test_projects.py-->line:69] - INFO: 用例--创建项目名称为空--执行通过
2020-04-20 13:08:35,390 -- [test_projects.py-->line:69] - INFO: 用例--创建项目名称超过200字符--执行通过
2020-04-20 13:14:09,729 -- [test_projects.py-->line:69] - INFO: 用例--创建项目成功--执行通过
2020-04-20 13:15:50,050 -- [test_projects.py-->line:69] - INFO: 用例--创建项目成功--执行通过
2020-04-20 13:15:50,167 -- [test_projects.py-->line:69] - INFO: 用例--创建已存在项目--执行通过
2020-04-20 13:15:50,284 -- [test_projects.py-->line:69] - INFO: 用例--创建项目名称为空--执行通过
2020-04-20 13:15:50,406 -- [test_projects.py-->line:69] - INFO: 用例--创建项目名称超过200字符--执行通过
2020-04-20 13:15:50,521 -- [test_projects.py-->line:69] - INFO: 用例--leader为空--执行通过
2020-04-20 13:15:50,641 -- [test_projects.py-->line:69] - INFO: 用例--leader超过50字符--执行通过
2020-04-20 13:15:50,763 -- [test_projects.py-->line:69] - INFO: 用例--tester为空--执行通过
2020-04-20 13:15:50,886 -- [test_projects.py-->line:69] - INFO: 用例--tester超过50字符--执行通过
2020-04-20 13:15:50,995 -- [test_projects.py-->line:69] - INFO: 用例--programmer为空--执行通过
2020-04-20 13:15:51,130 -- [test_projects.py-->line:69] - INFO: 用例--programmer超过50字符--执行通过
2020-04-20 13:15:51,246 -- [test_projects.py-->line:69] - INFO: 用例--publish_app为空--执行通过
2020-04-20 13:15:51,364 -- [test_projects.py-->line:69] - INFO: 用例--publish_app超过100字符--执行通过
2020-04-20 13:15:51,489 -- [test_projects.py-->line:61] - ERROR: 用例--传desc--执行未通过
2020-04-20 13:15:51,490 -- [test_projects.py-->line:62] - DEBUG: 预期结果：{'desc': 'XXX'}
2020-04-20 13:15:51,490 -- [test_projects.py-->line:63] - DEBUG: 实际结果：{'name': ['具有 项目名称 的 项目信息 已存在。']}
2020-04-20 13:15:51,491 -- [test_projects.py-->line:64] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_projects.py", line 55, in test_project
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 13:15:51,612 -- [test_projects.py-->line:61] - ERROR: 用例--不传desc--执行未通过
2020-04-20 13:15:51,613 -- [test_projects.py-->line:62] - DEBUG: 预期结果：{'desc': ''}
2020-04-20 13:15:51,613 -- [test_projects.py-->line:63] - DEBUG: 实际结果：{'name': ['具有 项目名称 的 项目信息 已存在。']}
2020-04-20 13:15:51,613 -- [test_projects.py-->line:64] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_projects.py", line 55, in test_project
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 14:34:29,023 -- [test_06interface.py-->line:73] - ERROR: 用例--project_id为空--执行未通过
2020-04-20 14:34:29,023 -- [test_06interface.py-->line:74] - DEBUG: 预期结果：{'project_id': ['该字段不能为 null。']}
2020-04-20 14:34:29,024 -- [test_06interface.py-->line:75] - DEBUG: 实际结果：{'detail': '方法 “PSOT” 不被允许。'}
2020-04-20 14:34:29,024 -- [test_06interface.py-->line:76] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_06interface.py", line 67, in test_interface
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 14:34:29,431 -- [test_06interface.py-->line:73] - ERROR: 用例--project_id不存在--执行未通过
2020-04-20 14:34:29,431 -- [test_06interface.py-->line:74] - DEBUG: 预期结果：{'project_id': ['项目id不存在。']}
2020-04-20 14:34:29,432 -- [test_06interface.py-->line:75] - DEBUG: 实际结果：{'detail': '方法 “PSOT” 不被允许。'}
2020-04-20 14:34:29,432 -- [test_06interface.py-->line:76] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_06interface.py", line 67, in test_interface
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 14:35:33,887 -- [test_06interface.py-->line:73] - ERROR: 用例--project_id为空--执行未通过
2020-04-20 14:35:33,887 -- [test_06interface.py-->line:74] - DEBUG: 预期结果：{'project_id': ['该字段不能为 null。']}
2020-04-20 14:35:33,888 -- [test_06interface.py-->line:75] - DEBUG: 实际结果：{'detail': '方法 “PSOT” 不被允许。'}
2020-04-20 14:35:33,888 -- [test_06interface.py-->line:76] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_06interface.py", line 67, in test_interface
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 14:35:34,304 -- [test_06interface.py-->line:73] - ERROR: 用例--project_id不存在--执行未通过
2020-04-20 14:35:34,304 -- [test_06interface.py-->line:74] - DEBUG: 预期结果：{'project_id': ['项目id不存在。']}
2020-04-20 14:35:34,304 -- [test_06interface.py-->line:75] - DEBUG: 实际结果：{'detail': '方法 “PSOT” 不被允许。'}
2020-04-20 14:35:34,304 -- [test_06interface.py-->line:76] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_06interface.py", line 67, in test_interface
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 14:38:56,866 -- [test_06interface.py-->line:73] - ERROR: 用例--project_id为空--执行未通过
2020-04-20 14:38:56,867 -- [test_06interface.py-->line:74] - DEBUG: 预期结果：{'project_id': ['该字段不能为 null。']}
2020-04-20 14:38:56,867 -- [test_06interface.py-->line:75] - DEBUG: 实际结果：{'detail': '方法 “PSOT” 不被允许。'}
2020-04-20 14:38:56,867 -- [test_06interface.py-->line:76] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_06interface.py", line 67, in test_interface
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 14:38:57,281 -- [test_06interface.py-->line:73] - ERROR: 用例--project_id不存在--执行未通过
2020-04-20 14:38:57,281 -- [test_06interface.py-->line:74] - DEBUG: 预期结果：{'project_id': ['项目id不存在。']}
2020-04-20 14:38:57,281 -- [test_06interface.py-->line:75] - DEBUG: 实际结果：{'detail': '方法 “PSOT” 不被允许。'}
2020-04-20 14:38:57,282 -- [test_06interface.py-->line:76] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_06interface.py", line 67, in test_interface
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 14:42:15,050 -- [test_06interface.py-->line:73] - ERROR: 用例--创建接口成功--执行未通过
2020-04-20 14:42:15,050 -- [test_06interface.py-->line:74] - DEBUG: 预期结果：{'name': 'inter48188'}
2020-04-20 14:42:15,050 -- [test_06interface.py-->line:75] - DEBUG: 实际结果：{'detail': '方法 “PSOT” 不被允许。'}
2020-04-20 14:42:15,050 -- [test_06interface.py-->line:76] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_06interface.py", line 67, in test_interface
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 14:42:15,452 -- [test_06interface.py-->line:73] - ERROR: 用例--创建接口名称为空--执行未通过
2020-04-20 14:42:15,452 -- [test_06interface.py-->line:74] - DEBUG: 预期结果：{'name': ['该字段不能为空。']}
2020-04-20 14:42:15,452 -- [test_06interface.py-->line:75] - DEBUG: 实际结果：{'detail': '方法 “PSOT” 不被允许。'}
2020-04-20 14:42:15,452 -- [test_06interface.py-->line:76] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_06interface.py", line 67, in test_interface
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 14:42:15,848 -- [test_06interface.py-->line:73] - ERROR: 用例--接口名称已存在--执行未通过
2020-04-20 14:42:15,848 -- [test_06interface.py-->line:74] - DEBUG: 预期结果：{'name': ['具有 接口名称 的 接口信息 已存在。']}
2020-04-20 14:42:15,848 -- [test_06interface.py-->line:75] - DEBUG: 实际结果：{'detail': '方法 “PSOT” 不被允许。'}
2020-04-20 14:42:15,848 -- [test_06interface.py-->line:76] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_06interface.py", line 67, in test_interface
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 14:42:16,236 -- [test_06interface.py-->line:73] - ERROR: 用例--tester为空--执行未通过
2020-04-20 14:42:16,236 -- [test_06interface.py-->line:74] - DEBUG: 预期结果：{'tester': ['该字段不能为空。']}
2020-04-20 14:42:16,236 -- [test_06interface.py-->line:75] - DEBUG: 实际结果：{'detail': '方法 “PSOT” 不被允许。'}
2020-04-20 14:42:16,236 -- [test_06interface.py-->line:76] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_06interface.py", line 67, in test_interface
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 14:42:16,658 -- [test_06interface.py-->line:73] - ERROR: 用例--tester超过50字符--执行未通过
2020-04-20 14:42:16,658 -- [test_06interface.py-->line:74] - DEBUG: 预期结果：{'tester': ['请确保这个字段不能超过 50 个字符。']}
2020-04-20 14:42:16,658 -- [test_06interface.py-->line:75] - DEBUG: 实际结果：{'detail': '方法 “PSOT” 不被允许。'}
2020-04-20 14:42:16,659 -- [test_06interface.py-->line:76] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_06interface.py", line 67, in test_interface
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 14:42:17,055 -- [test_06interface.py-->line:73] - ERROR: 用例--project_id为空--执行未通过
2020-04-20 14:42:17,056 -- [test_06interface.py-->line:74] - DEBUG: 预期结果：{'project_id': ['该字段不能为 null。']}
2020-04-20 14:42:17,056 -- [test_06interface.py-->line:75] - DEBUG: 实际结果：{'detail': '方法 “PSOT” 不被允许。'}
2020-04-20 14:42:17,056 -- [test_06interface.py-->line:76] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_06interface.py", line 67, in test_interface
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 14:42:17,454 -- [test_06interface.py-->line:73] - ERROR: 用例--project_id不存在--执行未通过
2020-04-20 14:42:17,454 -- [test_06interface.py-->line:74] - DEBUG: 预期结果：{'project_id': ['项目id不存在。']}
2020-04-20 14:42:17,454 -- [test_06interface.py-->line:75] - DEBUG: 实际结果：{'detail': '方法 “PSOT” 不被允许。'}
2020-04-20 14:42:17,454 -- [test_06interface.py-->line:76] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_06interface.py", line 67, in test_interface
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 14:42:17,849 -- [test_06interface.py-->line:73] - ERROR: 用例--传desc--执行未通过
2020-04-20 14:42:17,850 -- [test_06interface.py-->line:74] - DEBUG: 预期结果：{'desc': 'test'}
2020-04-20 14:42:17,850 -- [test_06interface.py-->line:75] - DEBUG: 实际结果：{'detail': '方法 “PSOT” 不被允许。'}
2020-04-20 14:42:17,850 -- [test_06interface.py-->line:76] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_06interface.py", line 67, in test_interface
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 14:42:18,264 -- [test_06interface.py-->line:73] - ERROR: 用例--不传desc--执行未通过
2020-04-20 14:42:18,264 -- [test_06interface.py-->line:74] - DEBUG: 预期结果：{'desc': ''}
2020-04-20 14:42:18,264 -- [test_06interface.py-->line:75] - DEBUG: 实际结果：{'detail': '方法 “PSOT” 不被允许。'}
2020-04-20 14:42:18,264 -- [test_06interface.py-->line:76] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_06interface.py", line 67, in test_interface
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 14:44:30,420 -- [test_06interface.py-->line:81] - INFO: 用例--创建接口成功--执行通过
2020-04-20 14:44:30,834 -- [test_06interface.py-->line:81] - INFO: 用例--创建接口名称为空--执行通过
2020-04-20 14:44:31,230 -- [test_06interface.py-->line:81] - INFO: 用例--接口名称已存在--执行通过
2020-04-20 14:44:31,630 -- [test_06interface.py-->line:81] - INFO: 用例--tester为空--执行通过
2020-04-20 14:44:32,038 -- [test_06interface.py-->line:81] - INFO: 用例--tester超过50字符--执行通过
2020-04-20 14:44:32,448 -- [test_06interface.py-->line:81] - INFO: 用例--project_id为空--执行通过
2020-04-20 14:44:32,883 -- [test_06interface.py-->line:73] - ERROR: 用例--project_id不存在--执行未通过
2020-04-20 14:44:32,883 -- [test_06interface.py-->line:74] - DEBUG: 预期结果：{'project_id': ['项目id不存在。']}
2020-04-20 14:44:32,883 -- [test_06interface.py-->line:75] - DEBUG: 实际结果：{'name': ['具有 接口名称 的 接口信息 已存在。'], 'project_id': ['无效主键 “111111” － 对象不存在。']}
2020-04-20 14:44:32,883 -- [test_06interface.py-->line:76] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_06interface.py", line 67, in test_interface
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 14:44:33,285 -- [test_06interface.py-->line:81] - INFO: 用例--传desc--执行通过
2020-04-20 14:44:33,697 -- [test_06interface.py-->line:73] - ERROR: 用例--不传desc--执行未通过
2020-04-20 14:44:33,697 -- [test_06interface.py-->line:74] - DEBUG: 预期结果：{'desc': ''}
2020-04-20 14:44:33,697 -- [test_06interface.py-->line:75] - DEBUG: 实际结果：{'id': 6140, 'name': 'inter42396', 'tester': 'fls530', 'project': 'pro95075', 'project_id': 10675, 'desc': None, 'create_time': '2020-04-20T14:44:26.154963+08:00'}
2020-04-20 14:44:33,697 -- [test_06interface.py-->line:76] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_06interface.py", line 67, in test_interface
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 14:45:40,476 -- [test_06interface.py-->line:81] - INFO: 用例--创建接口成功--执行通过
2020-04-20 14:45:40,872 -- [test_06interface.py-->line:81] - INFO: 用例--创建接口名称为空--执行通过
2020-04-20 14:45:41,279 -- [test_06interface.py-->line:81] - INFO: 用例--接口名称已存在--执行通过
2020-04-20 14:45:41,690 -- [test_06interface.py-->line:81] - INFO: 用例--tester为空--执行通过
2020-04-20 14:45:42,143 -- [test_06interface.py-->line:81] - INFO: 用例--tester超过50字符--执行通过
2020-04-20 14:45:42,548 -- [test_06interface.py-->line:81] - INFO: 用例--project_id为空--执行通过
2020-04-20 14:45:42,943 -- [test_06interface.py-->line:73] - ERROR: 用例--project_id不存在--执行未通过
2020-04-20 14:45:42,943 -- [test_06interface.py-->line:74] - DEBUG: 预期结果：{'project_id': ['项目id不存在。']}
2020-04-20 14:45:42,943 -- [test_06interface.py-->line:75] - DEBUG: 实际结果：{'project_id': ['无效主键 “111111” － 对象不存在。']}
2020-04-20 14:45:42,943 -- [test_06interface.py-->line:76] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_06interface.py", line 67, in test_interface
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 14:45:43,352 -- [test_06interface.py-->line:81] - INFO: 用例--传desc--执行通过
2020-04-20 14:45:43,743 -- [test_06interface.py-->line:73] - ERROR: 用例--不传desc--执行未通过
2020-04-20 14:45:43,743 -- [test_06interface.py-->line:74] - DEBUG: 预期结果：{'desc': ''}
2020-04-20 14:45:43,743 -- [test_06interface.py-->line:75] - DEBUG: 实际结果：{'id': 6143, 'name': 'inter64678', 'tester': 'fls530', 'project': 'pro47088', 'project_id': 10684, 'desc': None, 'create_time': '2020-04-20T14:45:36.203181+08:00'}
2020-04-20 14:45:43,743 -- [test_06interface.py-->line:76] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_06interface.py", line 67, in test_interface
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 14:46:43,226 -- [test_06interface.py-->line:81] - INFO: 用例--创建接口成功--执行通过
2020-04-20 14:46:43,620 -- [test_06interface.py-->line:81] - INFO: 用例--创建接口名称为空--执行通过
2020-04-20 14:46:44,020 -- [test_06interface.py-->line:81] - INFO: 用例--接口名称已存在--执行通过
2020-04-20 14:46:44,410 -- [test_06interface.py-->line:81] - INFO: 用例--tester为空--执行通过
2020-04-20 14:46:44,819 -- [test_06interface.py-->line:81] - INFO: 用例--tester超过50字符--执行通过
2020-04-20 14:46:45,223 -- [test_06interface.py-->line:81] - INFO: 用例--project_id为空--执行通过
2020-04-20 14:46:45,623 -- [test_06interface.py-->line:73] - ERROR: 用例--project_id不存在--执行未通过
2020-04-20 14:46:45,624 -- [test_06interface.py-->line:74] - DEBUG: 预期结果：{'project_id': ['项目id不存在。']}
2020-04-20 14:46:45,624 -- [test_06interface.py-->line:75] - DEBUG: 实际结果：{'project_id': ['无效主键 “111111” － 对象不存在。']}
2020-04-20 14:46:45,625 -- [test_06interface.py-->line:76] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_06interface.py", line 67, in test_interface
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 14:46:46,031 -- [test_06interface.py-->line:81] - INFO: 用例--传desc--执行通过
2020-04-20 14:46:46,444 -- [test_06interface.py-->line:81] - INFO: 用例--不传desc--执行通过
2020-04-20 16:12:06,750 -- [test_07testcase.py-->line:90] - INFO: 用例--创建用例成功--执行通过
2020-04-20 16:12:07,382 -- [test_07testcase.py-->line:90] - INFO: 用例--用例名称已存在--执行通过
2020-04-20 16:12:07,996 -- [test_07testcase.py-->line:90] - INFO: 用例--用例名称为空--执行通过
2020-04-20 16:12:08,625 -- [test_07testcase.py-->line:90] - INFO: 用例--interface为字符串类型--执行通过
2020-04-20 16:12:09,245 -- [test_07testcase.py-->line:90] - INFO: 用例--interface为整形--执行通过
2020-04-20 16:12:09,872 -- [test_07testcase.py-->line:90] - INFO: 用例--interface为空字典--执行通过
2020-04-20 16:12:10,511 -- [test_07testcase.py-->line:82] - ERROR: 用例--pid和iid为字符串--执行未通过
2020-04-20 16:12:10,511 -- [test_07testcase.py-->line:83] - DEBUG: 预期结果：{'interface': {'iid': ['该字段必须int。'], 'pid': ['该字段必须是int。']}}
2020-04-20 16:12:10,511 -- [test_07testcase.py-->line:84] - DEBUG: 实际结果：{'id': 2092, 'name': 'case12911', 'interface': {'name': 'inter51165', 'project': 'pro88165'}, 'author': 'fls530'}
2020-04-20 16:12:10,512 -- [test_07testcase.py-->line:85] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_07testcase.py", line 76, in test_testcase
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 16:12:11,154 -- [test_07testcase.py-->line:90] - INFO: 用例--pid不存在--执行通过
2020-04-20 16:12:11,760 -- [test_07testcase.py-->line:90] - INFO: 用例--iid不存在--执行通过
2020-04-20 16:12:12,363 -- [test_07testcase.py-->line:90] - INFO: 用例--pid和iid不关联--执行通过
2020-04-20 16:12:12,971 -- [test_07testcase.py-->line:90] - INFO: 用例--author为空--执行通过
2020-04-20 16:12:14,610 -- [test_07testcase.py-->line:90] - INFO: 用例--author超过50字符--执行通过
2020-04-20 16:14:40,990 -- [Run_test.py-->line:6] - INFO: ---------------开始执行测试用例-----------------------
2020-04-20 16:14:41,932 -- [test_01register.py-->line:46] - ERROR: 用例--注册成功-用户名包含英文和数字--执行未通过
2020-04-20 16:14:41,932 -- [test_01register.py-->line:47] - DEBUG: 预期结果：{'username': 'fls530'}
2020-04-20 16:14:41,932 -- [test_01register.py-->line:48] - DEBUG: 实际结果：{'username': ['已存在一位使用该名字的用户。']}
2020-04-20 16:14:41,932 -- [test_01register.py-->line:49] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_01register.py", line 38, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 16:14:42,373 -- [test_01register.py-->line:54] - INFO: 用例--注册成功-用户名包含中文--执行通过
2020-04-20 16:14:42,685 -- [test_01register.py-->line:54] - INFO: 用例--注册成功-用户名为纯英文--执行通过
2020-04-20 16:14:42,989 -- [test_01register.py-->line:54] - INFO: 用例--注册成功-用户名包含中文--执行通过
2020-04-20 16:14:43,295 -- [test_01register.py-->line:54] - INFO: 用例--已注册的用户名--执行通过
2020-04-20 16:14:43,590 -- [test_01register.py-->line:54] - INFO: 用例--已注册的邮箱--执行通过
2020-04-20 16:14:43,894 -- [test_01register.py-->line:54] - INFO: 用例--用户名小于6位--执行通过
2020-04-20 16:14:44,196 -- [test_01register.py-->line:54] - INFO: 用例--邮箱格式错误--执行通过
2020-04-20 16:14:44,513 -- [test_01register.py-->line:54] - INFO: 用例--用户名大于20位--执行通过
2020-04-20 16:14:44,824 -- [test_01register.py-->line:54] - INFO: 用例--密码小于6位--执行通过
2020-04-20 16:14:45,154 -- [test_01register.py-->line:54] - INFO: 用例--密码大于20位--执行通过
2020-04-20 16:14:45,461 -- [test_01register.py-->line:54] - INFO: 用例--两遍密码不一致--执行通过
2020-04-20 16:14:45,773 -- [test_01register.py-->line:46] - ERROR: 用例--密码为中文--执行未通过
2020-04-20 16:14:45,774 -- [test_01register.py-->line:47] - DEBUG: 预期结果：{'non_field_errors': ['两次输入密码不正确']}
2020-04-20 16:14:45,774 -- [test_01register.py-->line:48] - DEBUG: 实际结果：{'username': ['已存在一位使用该名字的用户。']}
2020-04-20 16:14:45,774 -- [test_01register.py-->line:49] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_01register.py", line 38, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 16:14:46,093 -- [test_01register.py-->line:46] - ERROR: 用例--确认密码为中文--执行未通过
2020-04-20 16:14:46,093 -- [test_01register.py-->line:47] - DEBUG: 预期结果：{'non_field_errors': ['两次输入密码不正确']}
2020-04-20 16:14:46,094 -- [test_01register.py-->line:48] - DEBUG: 实际结果：{'username': ['已存在一位使用该名字的用户。']}
2020-04-20 16:14:46,094 -- [test_01register.py-->line:49] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_01register.py", line 38, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 16:14:46,212 -- [test_03eamil.py-->line:39] - INFO: 用例--已注册用户名--执行通过
2020-04-20 16:14:46,329 -- [test_03eamil.py-->line:39] - INFO: 用例--未注册用户名--执行通过
2020-04-20 16:14:46,766 -- [test_04login.py-->line:39] - INFO: 用例--登录成功--执行通过
2020-04-20 16:14:46,874 -- [test_04login.py-->line:39] - INFO: 用例--用户名为空--执行通过
2020-04-20 16:14:46,984 -- [test_04login.py-->line:39] - INFO: 用例--密码为空--执行通过
2020-04-20 16:14:47,213 -- [test_04login.py-->line:39] - INFO: 用例--用户名未注册--执行通过
2020-04-20 16:14:47,442 -- [test_04login.py-->line:39] - INFO: 用例--密码错误--执行通过
2020-04-20 16:14:47,671 -- [test_04login.py-->line:39] - INFO: 用例--用户名格式错误--执行通过
2020-04-20 16:14:48,292 -- [test_05projects.py-->line:69] - INFO: 用例--创建项目成功--执行通过
2020-04-20 16:14:48,425 -- [test_05projects.py-->line:69] - INFO: 用例--创建已存在项目--执行通过
2020-04-20 16:14:48,557 -- [test_05projects.py-->line:69] - INFO: 用例--创建项目名称为空--执行通过
2020-04-20 16:14:48,693 -- [test_05projects.py-->line:69] - INFO: 用例--创建项目名称超过200字符--执行通过
2020-04-20 16:14:48,809 -- [test_05projects.py-->line:69] - INFO: 用例--leader为空--执行通过
2020-04-20 16:14:48,920 -- [test_05projects.py-->line:69] - INFO: 用例--leader超过50字符--执行通过
2020-04-20 16:14:49,028 -- [test_05projects.py-->line:69] - INFO: 用例--tester为空--执行通过
2020-04-20 16:14:49,140 -- [test_05projects.py-->line:69] - INFO: 用例--tester超过50字符--执行通过
2020-04-20 16:14:49,280 -- [test_05projects.py-->line:69] - INFO: 用例--programmer为空--执行通过
2020-04-20 16:14:49,397 -- [test_05projects.py-->line:69] - INFO: 用例--programmer超过50字符--执行通过
2020-04-20 16:14:49,523 -- [test_05projects.py-->line:69] - INFO: 用例--publish_app为空--执行通过
2020-04-20 16:14:49,643 -- [test_05projects.py-->line:69] - INFO: 用例--publish_app超过100字符--执行通过
2020-04-20 16:14:49,760 -- [test_05projects.py-->line:61] - ERROR: 用例--传desc--执行未通过
2020-04-20 16:14:49,760 -- [test_05projects.py-->line:62] - DEBUG: 预期结果：{'desc': 'XXX'}
2020-04-20 16:14:49,760 -- [test_05projects.py-->line:63] - DEBUG: 实际结果：{'name': ['具有 项目名称 的 项目信息 已存在。']}
2020-04-20 16:14:49,760 -- [test_05projects.py-->line:64] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_05projects.py", line 55, in test_project
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 16:14:49,875 -- [test_05projects.py-->line:61] - ERROR: 用例--不传desc--执行未通过
2020-04-20 16:14:49,876 -- [test_05projects.py-->line:62] - DEBUG: 预期结果：{'name': 'fls66236'}
2020-04-20 16:14:49,876 -- [test_05projects.py-->line:63] - DEBUG: 实际结果：{'name': ['具有 项目名称 的 项目信息 已存在。']}
2020-04-20 16:14:49,876 -- [test_05projects.py-->line:64] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_05projects.py", line 55, in test_project
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 16:14:50,770 -- [test_06interface.py-->line:81] - INFO: 用例--创建接口成功--执行通过
2020-04-20 16:14:51,194 -- [test_06interface.py-->line:81] - INFO: 用例--创建接口名称为空--执行通过
2020-04-20 16:14:51,634 -- [test_06interface.py-->line:81] - INFO: 用例--接口名称已存在--执行通过
2020-04-20 16:14:52,088 -- [test_06interface.py-->line:81] - INFO: 用例--tester为空--执行通过
2020-04-20 16:14:52,518 -- [test_06interface.py-->line:81] - INFO: 用例--tester超过50字符--执行通过
2020-04-20 16:14:52,935 -- [test_06interface.py-->line:81] - INFO: 用例--project_id为空--执行通过
2020-04-20 16:14:53,347 -- [test_06interface.py-->line:73] - ERROR: 用例--project_id不存在--执行未通过
2020-04-20 16:14:53,348 -- [test_06interface.py-->line:74] - DEBUG: 预期结果：{'project_id': ['项目id不存在。']}
2020-04-20 16:14:53,348 -- [test_06interface.py-->line:75] - DEBUG: 实际结果：{'project_id': ['无效主键 “111111” － 对象不存在。']}
2020-04-20 16:14:53,348 -- [test_06interface.py-->line:76] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_06interface.py", line 67, in test_interface
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 16:14:53,756 -- [test_06interface.py-->line:81] - INFO: 用例--传desc--执行通过
2020-04-20 16:14:54,192 -- [test_06interface.py-->line:81] - INFO: 用例--不传desc--执行通过
2020-04-20 16:14:55,268 -- [test_07testcase.py-->line:90] - INFO: 用例--创建用例成功--执行通过
2020-04-20 16:14:56,948 -- [test_07testcase.py-->line:90] - INFO: 用例--用例名称已存在--执行通过
2020-04-20 16:14:57,562 -- [test_07testcase.py-->line:90] - INFO: 用例--用例名称为空--执行通过
2020-04-20 16:14:58,195 -- [test_07testcase.py-->line:90] - INFO: 用例--interface为字符串类型--执行通过
2020-04-20 16:14:58,796 -- [test_07testcase.py-->line:90] - INFO: 用例--interface为整形--执行通过
2020-04-20 16:14:59,411 -- [test_07testcase.py-->line:90] - INFO: 用例--interface为空字典--执行通过
2020-04-20 16:15:00,032 -- [test_07testcase.py-->line:82] - ERROR: 用例--pid和iid为字符串--执行未通过
2020-04-20 16:15:00,032 -- [test_07testcase.py-->line:83] - DEBUG: 预期结果：{'interface': {'iid': ['该字段必须int。'], 'pid': ['该字段必须是int。']}}
2020-04-20 16:15:00,032 -- [test_07testcase.py-->line:84] - DEBUG: 实际结果：{'id': 2094, 'name': 'case12213', 'interface': {'name': 'inter60583', 'project': 'pro33272'}, 'author': 'fls530'}
2020-04-20 16:15:00,032 -- [test_07testcase.py-->line:85] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_07testcase.py", line 76, in test_testcase
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 16:15:00,656 -- [test_07testcase.py-->line:90] - INFO: 用例--pid不存在--执行通过
2020-04-20 16:15:01,288 -- [test_07testcase.py-->line:90] - INFO: 用例--iid不存在--执行通过
2020-04-20 16:15:01,929 -- [test_07testcase.py-->line:90] - INFO: 用例--pid和iid不关联--执行通过
2020-04-20 16:15:02,560 -- [test_07testcase.py-->line:90] - INFO: 用例--author为空--执行通过
2020-04-20 16:15:03,175 -- [test_07testcase.py-->line:90] - INFO: 用例--author超过50字符--执行通过
2020-04-20 16:15:03,725 -- [Run_test.py-->line:21] - INFO: ---------------测试用例执行完毕-----------------------
2020-04-20 17:07:51,846 -- [Run_test.py-->line:7] - INFO: ---------------开始执行测试用例-----------------------
2020-04-20 17:07:52,962 -- [test_01register.py-->line:46] - ERROR: 用例--注册成功-用户名包含英文和数字--执行未通过
2020-04-20 17:07:52,963 -- [test_01register.py-->line:47] - DEBUG: 预期结果：{'username': 'fls530'}
2020-04-20 17:07:52,963 -- [test_01register.py-->line:48] - DEBUG: 实际结果：{'username': ['已存在一位使用该名字的用户。']}
2020-04-20 17:07:52,963 -- [test_01register.py-->line:49] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_01register.py", line 38, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 17:07:53,276 -- [test_01register.py-->line:46] - ERROR: 用例--注册成功-用户名包含中文--执行未通过
2020-04-20 17:07:53,276 -- [test_01register.py-->line:47] - DEBUG: 预期结果：{'username': 'fls530哈哈哈'}
2020-04-20 17:07:53,276 -- [test_01register.py-->line:48] - DEBUG: 实际结果：{'username': ['已存在一位使用该名字的用户。']}
2020-04-20 17:07:53,276 -- [test_01register.py-->line:49] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_01register.py", line 38, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 17:07:53,573 -- [test_01register.py-->line:54] - INFO: 用例--注册成功-用户名为纯英文--执行通过
2020-04-20 17:07:53,870 -- [test_01register.py-->line:54] - INFO: 用例--注册成功-用户名包含中文--执行通过
2020-04-20 17:07:54,160 -- [test_01register.py-->line:54] - INFO: 用例--已注册的用户名--执行通过
2020-04-20 17:07:54,452 -- [test_01register.py-->line:54] - INFO: 用例--已注册的邮箱--执行通过
2020-04-20 17:07:54,736 -- [test_01register.py-->line:54] - INFO: 用例--用户名小于6位--执行通过
2020-04-20 17:07:55,038 -- [test_01register.py-->line:54] - INFO: 用例--邮箱格式错误--执行通过
2020-04-20 17:07:55,334 -- [test_01register.py-->line:54] - INFO: 用例--用户名大于20位--执行通过
2020-04-20 17:07:55,633 -- [test_01register.py-->line:54] - INFO: 用例--密码小于6位--执行通过
2020-04-20 17:07:55,923 -- [test_01register.py-->line:54] - INFO: 用例--密码大于20位--执行通过
2020-04-20 17:07:56,225 -- [test_01register.py-->line:54] - INFO: 用例--两遍密码不一致--执行通过
2020-04-20 17:07:56,518 -- [test_01register.py-->line:46] - ERROR: 用例--密码为中文--执行未通过
2020-04-20 17:07:56,519 -- [test_01register.py-->line:47] - DEBUG: 预期结果：{'non_field_errors': ['两次输入密码不正确']}
2020-04-20 17:07:56,519 -- [test_01register.py-->line:48] - DEBUG: 实际结果：{'username': ['已存在一位使用该名字的用户。']}
2020-04-20 17:07:56,520 -- [test_01register.py-->line:49] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_01register.py", line 38, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 17:07:56,868 -- [test_01register.py-->line:46] - ERROR: 用例--确认密码为中文--执行未通过
2020-04-20 17:07:56,868 -- [test_01register.py-->line:47] - DEBUG: 预期结果：{'non_field_errors': ['两次输入密码不正确']}
2020-04-20 17:07:56,869 -- [test_01register.py-->line:48] - DEBUG: 实际结果：{'username': ['已存在一位使用该名字的用户。']}
2020-04-20 17:07:56,869 -- [test_01register.py-->line:49] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_01register.py", line 38, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 17:07:56,983 -- [test_03eamil.py-->line:39] - INFO: 用例--已注册用户名--执行通过
2020-04-20 17:07:57,096 -- [test_03eamil.py-->line:39] - INFO: 用例--未注册用户名--执行通过
2020-04-20 17:07:57,541 -- [test_04login.py-->line:39] - INFO: 用例--登录成功--执行通过
2020-04-20 17:07:57,656 -- [test_04login.py-->line:39] - INFO: 用例--用户名为空--执行通过
2020-04-20 17:07:57,766 -- [test_04login.py-->line:39] - INFO: 用例--密码为空--执行通过
2020-04-20 17:07:58,002 -- [test_04login.py-->line:39] - INFO: 用例--用户名未注册--执行通过
2020-04-20 17:07:58,281 -- [test_04login.py-->line:39] - INFO: 用例--密码错误--执行通过
2020-04-20 17:07:58,523 -- [test_04login.py-->line:39] - INFO: 用例--用户名格式错误--执行通过
2020-04-20 17:07:59,138 -- [test_05projects.py-->line:69] - INFO: 用例--创建项目成功--执行通过
2020-04-20 17:07:59,265 -- [test_05projects.py-->line:69] - INFO: 用例--创建已存在项目--执行通过
2020-04-20 17:07:59,375 -- [test_05projects.py-->line:69] - INFO: 用例--创建项目名称为空--执行通过
2020-04-20 17:07:59,490 -- [test_05projects.py-->line:69] - INFO: 用例--创建项目名称超过200字符--执行通过
2020-04-20 17:07:59,613 -- [test_05projects.py-->line:69] - INFO: 用例--leader为空--执行通过
2020-04-20 17:07:59,733 -- [test_05projects.py-->line:69] - INFO: 用例--leader超过50字符--执行通过
2020-04-20 17:07:59,849 -- [test_05projects.py-->line:69] - INFO: 用例--tester为空--执行通过
2020-04-20 17:07:59,964 -- [test_05projects.py-->line:69] - INFO: 用例--tester超过50字符--执行通过
2020-04-20 17:08:00,073 -- [test_05projects.py-->line:69] - INFO: 用例--programmer为空--执行通过
2020-04-20 17:08:00,191 -- [test_05projects.py-->line:69] - INFO: 用例--programmer超过50字符--执行通过
2020-04-20 17:08:00,310 -- [test_05projects.py-->line:69] - INFO: 用例--publish_app为空--执行通过
2020-04-20 17:08:00,423 -- [test_05projects.py-->line:69] - INFO: 用例--publish_app超过100字符--执行通过
2020-04-20 17:08:00,536 -- [test_05projects.py-->line:61] - ERROR: 用例--传desc--执行未通过
2020-04-20 17:08:00,536 -- [test_05projects.py-->line:62] - DEBUG: 预期结果：{'desc': 'XXX'}
2020-04-20 17:08:00,536 -- [test_05projects.py-->line:63] - DEBUG: 实际结果：{'name': ['具有 项目名称 的 项目信息 已存在。']}
2020-04-20 17:08:00,536 -- [test_05projects.py-->line:64] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_05projects.py", line 55, in test_project
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 17:08:00,660 -- [test_05projects.py-->line:61] - ERROR: 用例--不传desc--执行未通过
2020-04-20 17:08:00,660 -- [test_05projects.py-->line:62] - DEBUG: 预期结果：{'name': 'fls76216'}
2020-04-20 17:08:00,660 -- [test_05projects.py-->line:63] - DEBUG: 实际结果：{'name': ['具有 项目名称 的 项目信息 已存在。']}
2020-04-20 17:08:00,660 -- [test_05projects.py-->line:64] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_05projects.py", line 55, in test_project
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 17:08:01,470 -- [test_06interface.py-->line:81] - INFO: 用例--创建接口成功--执行通过
2020-04-20 17:08:01,900 -- [test_06interface.py-->line:81] - INFO: 用例--创建接口名称为空--执行通过
2020-04-20 17:08:02,317 -- [test_06interface.py-->line:81] - INFO: 用例--接口名称已存在--执行通过
2020-04-20 17:08:02,706 -- [test_06interface.py-->line:81] - INFO: 用例--tester为空--执行通过
2020-04-20 17:08:03,113 -- [test_06interface.py-->line:81] - INFO: 用例--tester超过50字符--执行通过
2020-04-20 17:08:03,510 -- [test_06interface.py-->line:81] - INFO: 用例--project_id为空--执行通过
2020-04-20 17:08:03,920 -- [test_06interface.py-->line:73] - ERROR: 用例--project_id不存在--执行未通过
2020-04-20 17:08:03,920 -- [test_06interface.py-->line:74] - DEBUG: 预期结果：{'project_id': ['项目id不存在。']}
2020-04-20 17:08:03,920 -- [test_06interface.py-->line:75] - DEBUG: 实际结果：{'project_id': ['无效主键 “111111” － 对象不存在。']}
2020-04-20 17:08:03,920 -- [test_06interface.py-->line:76] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_06interface.py", line 67, in test_interface
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 17:08:04,335 -- [test_06interface.py-->line:81] - INFO: 用例--传desc--执行通过
2020-04-20 17:08:04,752 -- [test_06interface.py-->line:81] - INFO: 用例--不传desc--执行通过
2020-04-20 17:08:05,739 -- [test_07testcase.py-->line:90] - INFO: 用例--创建用例成功--执行通过
2020-04-20 17:08:06,341 -- [test_07testcase.py-->line:90] - INFO: 用例--用例名称已存在--执行通过
2020-04-20 17:08:06,951 -- [test_07testcase.py-->line:90] - INFO: 用例--用例名称为空--执行通过
2020-04-20 17:08:07,528 -- [test_07testcase.py-->line:90] - INFO: 用例--interface为字符串类型--执行通过
2020-04-20 17:08:08,127 -- [test_07testcase.py-->line:90] - INFO: 用例--interface为整形--执行通过
2020-04-20 17:08:08,849 -- [test_07testcase.py-->line:90] - INFO: 用例--interface为空字典--执行通过
2020-04-20 17:08:09,466 -- [test_07testcase.py-->line:82] - ERROR: 用例--pid和iid为字符串--执行未通过
2020-04-20 17:08:09,466 -- [test_07testcase.py-->line:83] - DEBUG: 预期结果：{'interface': {'iid': ['该字段必须int。'], 'pid': ['该字段必须是int。']}}
2020-04-20 17:08:09,467 -- [test_07testcase.py-->line:84] - DEBUG: 实际结果：{'id': 2096, 'name': 'case19771', 'interface': {'name': 'inter47555', 'project': 'pro59665'}, 'author': 'fls530'}
2020-04-20 17:08:09,467 -- [test_07testcase.py-->line:85] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_07testcase.py", line 76, in test_testcase
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 17:08:10,090 -- [test_07testcase.py-->line:90] - INFO: 用例--pid不存在--执行通过
2020-04-20 17:08:10,695 -- [test_07testcase.py-->line:90] - INFO: 用例--iid不存在--执行通过
2020-04-20 17:08:11,345 -- [test_07testcase.py-->line:90] - INFO: 用例--pid和iid不关联--执行通过
2020-04-20 17:08:11,997 -- [test_07testcase.py-->line:90] - INFO: 用例--author为空--执行通过
2020-04-20 17:08:12,663 -- [test_07testcase.py-->line:90] - INFO: 用例--author超过50字符--执行通过
2020-04-20 17:08:14,390 -- [Run_test.py-->line:22] - INFO: ---------------测试用例执行完毕,正在发送邮件-----------------------
2020-04-20 17:09:51,043 -- [Run_test.py-->line:7] - INFO: ---------------开始执行测试用例-----------------------
2020-04-20 17:09:52,169 -- [test_01register.py-->line:46] - ERROR: 用例--注册成功-用户名包含英文和数字--执行未通过
2020-04-20 17:09:52,169 -- [test_01register.py-->line:47] - DEBUG: 预期结果：{'username': 'fls530'}
2020-04-20 17:09:52,169 -- [test_01register.py-->line:48] - DEBUG: 实际结果：{'username': ['已存在一位使用该名字的用户。']}
2020-04-20 17:09:52,169 -- [test_01register.py-->line:49] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_01register.py", line 38, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 17:09:52,740 -- [test_01register.py-->line:46] - ERROR: 用例--注册成功-用户名包含中文--执行未通过
2020-04-20 17:09:52,740 -- [test_01register.py-->line:47] - DEBUG: 预期结果：{'username': 'fls530哈哈哈'}
2020-04-20 17:09:52,740 -- [test_01register.py-->line:48] - DEBUG: 实际结果：{'username': ['已存在一位使用该名字的用户。']}
2020-04-20 17:09:52,740 -- [test_01register.py-->line:49] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_01register.py", line 38, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 17:09:53,312 -- [test_01register.py-->line:54] - INFO: 用例--注册成功-用户名为纯英文--执行通过
2020-04-20 17:09:53,629 -- [test_01register.py-->line:54] - INFO: 用例--注册成功-用户名包含中文--执行通过
2020-04-20 17:09:54,175 -- [test_01register.py-->line:54] - INFO: 用例--已注册的用户名--执行通过
2020-04-20 17:09:54,463 -- [test_01register.py-->line:54] - INFO: 用例--已注册的邮箱--执行通过
2020-04-20 17:09:54,757 -- [test_01register.py-->line:54] - INFO: 用例--用户名小于6位--执行通过
2020-04-20 17:09:55,066 -- [test_01register.py-->line:54] - INFO: 用例--邮箱格式错误--执行通过
2020-04-20 17:09:55,365 -- [test_01register.py-->line:54] - INFO: 用例--用户名大于20位--执行通过
2020-04-20 17:09:55,675 -- [test_01register.py-->line:54] - INFO: 用例--密码小于6位--执行通过
2020-04-20 17:10:04,558 -- [Run_test.py-->line:7] - INFO: ---------------开始执行测试用例-----------------------
2020-04-20 17:10:05,617 -- [test_01register.py-->line:46] - ERROR: 用例--注册成功-用户名包含英文和数字--执行未通过
2020-04-20 17:10:05,617 -- [test_01register.py-->line:47] - DEBUG: 预期结果：{'username': 'fls530'}
2020-04-20 17:10:05,617 -- [test_01register.py-->line:48] - DEBUG: 实际结果：{'username': ['已存在一位使用该名字的用户。']}
2020-04-20 17:10:05,618 -- [test_01register.py-->line:49] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_01register.py", line 38, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 17:10:05,918 -- [test_01register.py-->line:46] - ERROR: 用例--注册成功-用户名包含中文--执行未通过
2020-04-20 17:10:05,918 -- [test_01register.py-->line:47] - DEBUG: 预期结果：{'username': 'fls530哈哈哈'}
2020-04-20 17:10:05,918 -- [test_01register.py-->line:48] - DEBUG: 实际结果：{'username': ['已存在一位使用该名字的用户。']}
2020-04-20 17:10:05,918 -- [test_01register.py-->line:49] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_01register.py", line 38, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 17:10:06,215 -- [test_01register.py-->line:54] - INFO: 用例--注册成功-用户名为纯英文--执行通过
2020-04-20 17:10:06,514 -- [test_01register.py-->line:54] - INFO: 用例--注册成功-用户名包含中文--执行通过
2020-04-20 17:10:06,810 -- [test_01register.py-->line:54] - INFO: 用例--已注册的用户名--执行通过
2020-04-20 17:10:07,097 -- [test_01register.py-->line:54] - INFO: 用例--已注册的邮箱--执行通过
2020-04-20 17:10:07,389 -- [test_01register.py-->line:54] - INFO: 用例--用户名小于6位--执行通过
2020-04-20 17:10:07,683 -- [test_01register.py-->line:54] - INFO: 用例--邮箱格式错误--执行通过
2020-04-20 17:10:07,983 -- [test_01register.py-->line:54] - INFO: 用例--用户名大于20位--执行通过
2020-04-20 17:10:08,295 -- [test_01register.py-->line:54] - INFO: 用例--密码小于6位--执行通过
2020-04-20 17:10:08,630 -- [test_01register.py-->line:54] - INFO: 用例--密码大于20位--执行通过
2020-04-20 17:10:09,238 -- [test_01register.py-->line:54] - INFO: 用例--两遍密码不一致--执行通过
2020-04-20 17:10:09,577 -- [test_01register.py-->line:46] - ERROR: 用例--密码为中文--执行未通过
2020-04-20 17:10:09,577 -- [test_01register.py-->line:47] - DEBUG: 预期结果：{'non_field_errors': ['两次输入密码不正确']}
2020-04-20 17:10:09,578 -- [test_01register.py-->line:48] - DEBUG: 实际结果：{'username': ['已存在一位使用该名字的用户。']}
2020-04-20 17:10:09,578 -- [test_01register.py-->line:49] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_01register.py", line 38, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 17:10:10,177 -- [test_01register.py-->line:46] - ERROR: 用例--确认密码为中文--执行未通过
2020-04-20 17:10:10,177 -- [test_01register.py-->line:47] - DEBUG: 预期结果：{'non_field_errors': ['两次输入密码不正确']}
2020-04-20 17:10:10,177 -- [test_01register.py-->line:48] - DEBUG: 实际结果：{'username': ['已存在一位使用该名字的用户。']}
2020-04-20 17:10:10,177 -- [test_01register.py-->line:49] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_01register.py", line 38, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 17:10:10,302 -- [test_03eamil.py-->line:39] - INFO: 用例--已注册用户名--执行通过
2020-04-20 17:10:10,429 -- [test_03eamil.py-->line:39] - INFO: 用例--未注册用户名--执行通过
2020-04-20 17:10:10,856 -- [test_04login.py-->line:39] - INFO: 用例--登录成功--执行通过
2020-04-20 17:10:10,969 -- [test_04login.py-->line:39] - INFO: 用例--用户名为空--执行通过
2020-04-20 17:10:11,085 -- [test_04login.py-->line:39] - INFO: 用例--密码为空--执行通过
2020-04-20 17:10:11,319 -- [test_04login.py-->line:39] - INFO: 用例--用户名未注册--执行通过
2020-04-20 17:10:11,552 -- [test_04login.py-->line:39] - INFO: 用例--密码错误--执行通过
2020-04-20 17:10:11,785 -- [test_04login.py-->line:39] - INFO: 用例--用户名格式错误--执行通过
2020-04-20 17:10:12,407 -- [test_05projects.py-->line:69] - INFO: 用例--创建项目成功--执行通过
2020-04-20 17:10:12,520 -- [test_05projects.py-->line:69] - INFO: 用例--创建已存在项目--执行通过
2020-04-20 17:10:12,649 -- [test_05projects.py-->line:69] - INFO: 用例--创建项目名称为空--执行通过
2020-04-20 17:10:12,763 -- [test_05projects.py-->line:69] - INFO: 用例--创建项目名称超过200字符--执行通过
2020-04-20 17:10:12,874 -- [test_05projects.py-->line:69] - INFO: 用例--leader为空--执行通过
2020-04-20 17:10:12,990 -- [test_05projects.py-->line:69] - INFO: 用例--leader超过50字符--执行通过
2020-04-20 17:10:13,108 -- [test_05projects.py-->line:69] - INFO: 用例--tester为空--执行通过
2020-04-20 17:10:13,231 -- [test_05projects.py-->line:69] - INFO: 用例--tester超过50字符--执行通过
2020-04-20 17:10:13,348 -- [test_05projects.py-->line:69] - INFO: 用例--programmer为空--执行通过
2020-04-20 17:10:13,467 -- [test_05projects.py-->line:69] - INFO: 用例--programmer超过50字符--执行通过
2020-04-20 17:10:13,588 -- [test_05projects.py-->line:69] - INFO: 用例--publish_app为空--执行通过
2020-04-20 17:10:13,710 -- [test_05projects.py-->line:69] - INFO: 用例--publish_app超过100字符--执行通过
2020-04-20 17:10:13,818 -- [test_05projects.py-->line:61] - ERROR: 用例--传desc--执行未通过
2020-04-20 17:10:13,818 -- [test_05projects.py-->line:62] - DEBUG: 预期结果：{'desc': 'XXX'}
2020-04-20 17:10:13,818 -- [test_05projects.py-->line:63] - DEBUG: 实际结果：{'name': ['具有 项目名称 的 项目信息 已存在。']}
2020-04-20 17:10:13,818 -- [test_05projects.py-->line:64] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_05projects.py", line 55, in test_project
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 17:10:13,932 -- [test_05projects.py-->line:61] - ERROR: 用例--不传desc--执行未通过
2020-04-20 17:10:13,932 -- [test_05projects.py-->line:62] - DEBUG: 预期结果：{'name': 'fls12980'}
2020-04-20 17:10:13,932 -- [test_05projects.py-->line:63] - DEBUG: 实际结果：{'name': ['具有 项目名称 的 项目信息 已存在。']}
2020-04-20 17:10:13,932 -- [test_05projects.py-->line:64] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_05projects.py", line 55, in test_project
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 17:10:14,743 -- [test_06interface.py-->line:81] - INFO: 用例--创建接口成功--执行通过
2020-04-20 17:10:15,155 -- [test_06interface.py-->line:81] - INFO: 用例--创建接口名称为空--执行通过
2020-04-20 17:10:15,577 -- [test_06interface.py-->line:81] - INFO: 用例--接口名称已存在--执行通过
2020-04-20 17:10:15,992 -- [test_06interface.py-->line:81] - INFO: 用例--tester为空--执行通过
2020-04-20 17:10:16,395 -- [test_06interface.py-->line:81] - INFO: 用例--tester超过50字符--执行通过
2020-04-20 17:10:16,817 -- [test_06interface.py-->line:81] - INFO: 用例--project_id为空--执行通过
2020-04-20 17:10:17,233 -- [test_06interface.py-->line:73] - ERROR: 用例--project_id不存在--执行未通过
2020-04-20 17:10:17,233 -- [test_06interface.py-->line:74] - DEBUG: 预期结果：{'project_id': ['项目id不存在。']}
2020-04-20 17:10:17,234 -- [test_06interface.py-->line:75] - DEBUG: 实际结果：{'project_id': ['无效主键 “111111” － 对象不存在。']}
2020-04-20 17:10:17,234 -- [test_06interface.py-->line:76] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_06interface.py", line 67, in test_interface
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 17:10:17,642 -- [test_06interface.py-->line:81] - INFO: 用例--传desc--执行通过
2020-04-20 17:10:18,065 -- [test_06interface.py-->line:81] - INFO: 用例--不传desc--执行通过
2020-04-20 17:10:19,082 -- [test_07testcase.py-->line:90] - INFO: 用例--创建用例成功--执行通过
2020-04-20 17:10:19,712 -- [test_07testcase.py-->line:90] - INFO: 用例--用例名称已存在--执行通过
2020-04-20 17:10:20,338 -- [test_07testcase.py-->line:90] - INFO: 用例--用例名称为空--执行通过
2020-04-20 17:10:20,954 -- [test_07testcase.py-->line:90] - INFO: 用例--interface为字符串类型--执行通过
2020-04-20 17:10:21,557 -- [test_07testcase.py-->line:90] - INFO: 用例--interface为整形--执行通过
2020-04-20 17:10:22,172 -- [test_07testcase.py-->line:90] - INFO: 用例--interface为空字典--执行通过
2020-04-20 17:10:22,800 -- [test_07testcase.py-->line:82] - ERROR: 用例--pid和iid为字符串--执行未通过
2020-04-20 17:10:22,800 -- [test_07testcase.py-->line:83] - DEBUG: 预期结果：{'interface': {'iid': ['该字段必须int。'], 'pid': ['该字段必须是int。']}}
2020-04-20 17:10:22,800 -- [test_07testcase.py-->line:84] - DEBUG: 实际结果：{'id': 2098, 'name': 'case11847', 'interface': {'name': 'inter16255', 'project': 'pro26809'}, 'author': 'fls530'}
2020-04-20 17:10:22,800 -- [test_07testcase.py-->line:85] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_07testcase.py", line 76, in test_testcase
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 17:10:23,402 -- [test_07testcase.py-->line:90] - INFO: 用例--pid不存在--执行通过
2020-04-20 17:10:24,010 -- [test_07testcase.py-->line:90] - INFO: 用例--iid不存在--执行通过
2020-04-20 17:10:24,617 -- [test_07testcase.py-->line:90] - INFO: 用例--pid和iid不关联--执行通过
2020-04-20 17:10:25,223 -- [test_07testcase.py-->line:90] - INFO: 用例--author为空--执行通过
2020-04-20 17:10:25,847 -- [test_07testcase.py-->line:90] - INFO: 用例--author超过50字符--执行通过
2020-04-20 17:10:27,049 -- [Run_test.py-->line:22] - INFO: ---------------测试用例执行完毕,正在发送邮件-----------------------
2020-04-20 17:17:23,972 -- [Run_test.py-->line:7] - INFO: ---------------开始执行测试用例-----------------------
2020-04-20 17:17:25,099 -- [test_01register.py-->line:54] - INFO: 用例--注册成功-用户名包含英文和数字--执行通过
2020-04-20 17:17:25,403 -- [test_01register.py-->line:54] - INFO: 用例--注册成功-用户名包含中文--执行通过
2020-04-20 17:17:25,701 -- [test_01register.py-->line:54] - INFO: 用例--注册成功-用户名为纯英文--执行通过
2020-04-20 17:17:26,001 -- [test_01register.py-->line:54] - INFO: 用例--注册成功-用户名包含中文--执行通过
2020-04-20 17:17:26,303 -- [test_01register.py-->line:54] - INFO: 用例--已注册的用户名--执行通过
2020-04-20 17:17:26,600 -- [test_01register.py-->line:54] - INFO: 用例--已注册的邮箱--执行通过
2020-04-20 17:17:26,909 -- [test_01register.py-->line:54] - INFO: 用例--用户名小于6位--执行通过
2020-04-20 17:17:27,215 -- [test_01register.py-->line:54] - INFO: 用例--邮箱格式错误--执行通过
2020-04-20 17:17:27,515 -- [test_01register.py-->line:54] - INFO: 用例--用户名大于20位--执行通过
2020-04-20 17:17:27,829 -- [test_01register.py-->line:54] - INFO: 用例--密码小于6位--执行通过
2020-04-20 17:17:28,135 -- [test_01register.py-->line:54] - INFO: 用例--密码大于20位--执行通过
2020-04-20 17:17:28,435 -- [test_01register.py-->line:54] - INFO: 用例--两遍密码不一致--执行通过
2020-04-20 17:17:28,734 -- [test_01register.py-->line:54] - INFO: 用例--密码为中文--执行通过
2020-04-20 17:17:29,032 -- [test_01register.py-->line:54] - INFO: 用例--确认密码为中文--执行通过
2020-04-20 17:17:29,142 -- [test_03eamil.py-->line:39] - INFO: 用例--已注册用户名--执行通过
2020-04-20 17:17:29,254 -- [test_03eamil.py-->line:39] - INFO: 用例--未注册用户名--执行通过
2020-04-20 17:17:29,678 -- [test_04login.py-->line:39] - INFO: 用例--登录成功--执行通过
2020-04-20 17:17:29,790 -- [test_04login.py-->line:39] - INFO: 用例--用户名为空--执行通过
2020-04-20 17:17:29,904 -- [test_04login.py-->line:39] - INFO: 用例--密码为空--执行通过
2020-04-20 17:17:30,130 -- [test_04login.py-->line:39] - INFO: 用例--用户名未注册--执行通过
2020-04-20 17:17:30,369 -- [test_04login.py-->line:39] - INFO: 用例--密码错误--执行通过
2020-04-20 17:17:30,597 -- [test_04login.py-->line:39] - INFO: 用例--用户名格式错误--执行通过
2020-04-20 17:17:31,256 -- [test_05projects.py-->line:69] - INFO: 用例--创建项目成功--执行通过
2020-04-20 17:17:31,370 -- [test_05projects.py-->line:69] - INFO: 用例--创建已存在项目--执行通过
2020-04-20 17:17:31,488 -- [test_05projects.py-->line:69] - INFO: 用例--创建项目名称为空--执行通过
2020-04-20 17:17:31,604 -- [test_05projects.py-->line:69] - INFO: 用例--创建项目名称超过200字符--执行通过
2020-04-20 17:17:31,719 -- [test_05projects.py-->line:69] - INFO: 用例--leader为空--执行通过
2020-04-20 17:17:31,840 -- [test_05projects.py-->line:69] - INFO: 用例--leader超过50字符--执行通过
2020-04-20 17:17:31,962 -- [test_05projects.py-->line:69] - INFO: 用例--tester为空--执行通过
2020-04-20 17:17:32,081 -- [test_05projects.py-->line:69] - INFO: 用例--tester超过50字符--执行通过
2020-04-20 17:17:32,204 -- [test_05projects.py-->line:69] - INFO: 用例--programmer为空--执行通过
2020-04-20 17:17:32,317 -- [test_05projects.py-->line:69] - INFO: 用例--programmer超过50字符--执行通过
2020-04-20 17:17:32,431 -- [test_05projects.py-->line:69] - INFO: 用例--publish_app为空--执行通过
2020-04-20 17:17:32,552 -- [test_05projects.py-->line:69] - INFO: 用例--publish_app超过100字符--执行通过
2020-04-20 17:17:32,661 -- [test_05projects.py-->line:69] - INFO: 用例--传desc--执行通过
2020-04-20 17:17:32,776 -- [test_05projects.py-->line:69] - INFO: 用例--不传desc--执行通过
2020-04-20 17:17:33,618 -- [test_06interface.py-->line:81] - INFO: 用例--创建接口成功--执行通过
2020-04-20 17:17:34,046 -- [test_06interface.py-->line:81] - INFO: 用例--创建接口名称为空--执行通过
2020-04-20 17:17:34,469 -- [test_06interface.py-->line:81] - INFO: 用例--接口名称已存在--执行通过
2020-04-20 17:17:34,869 -- [test_06interface.py-->line:81] - INFO: 用例--tester为空--执行通过
2020-04-20 17:17:35,303 -- [test_06interface.py-->line:81] - INFO: 用例--tester超过50字符--执行通过
2020-04-20 17:17:35,728 -- [test_06interface.py-->line:81] - INFO: 用例--project_id为空--执行通过
2020-04-20 17:17:36,158 -- [test_06interface.py-->line:81] - INFO: 用例--project_id不存在--执行通过
2020-04-20 17:17:36,589 -- [test_06interface.py-->line:81] - INFO: 用例--传desc--执行通过
2020-04-20 17:17:37,031 -- [test_06interface.py-->line:81] - INFO: 用例--不传desc--执行通过
2020-04-20 17:17:38,063 -- [test_07testcase.py-->line:89] - INFO: 用例--创建用例成功--执行通过
2020-04-20 17:17:38,674 -- [test_07testcase.py-->line:89] - INFO: 用例--用例名称已存在--执行通过
2020-04-20 17:17:39,294 -- [test_07testcase.py-->line:89] - INFO: 用例--用例名称为空--执行通过
2020-04-20 17:17:39,906 -- [test_07testcase.py-->line:89] - INFO: 用例--interface为字符串类型--执行通过
2020-04-20 17:17:40,566 -- [test_07testcase.py-->line:89] - INFO: 用例--interface为整形--执行通过
2020-04-20 17:17:41,464 -- [test_07testcase.py-->line:89] - INFO: 用例--interface为空字典--执行通过
2020-04-20 17:17:42,089 -- [test_07testcase.py-->line:89] - INFO: 用例--pid和iid为字符串--执行通过
2020-04-20 17:17:42,755 -- [test_07testcase.py-->line:89] - INFO: 用例--pid不存在--执行通过
2020-04-20 17:17:43,441 -- [test_07testcase.py-->line:89] - INFO: 用例--iid不存在--执行通过
2020-04-20 17:17:44,075 -- [test_07testcase.py-->line:89] - INFO: 用例--pid和iid不关联--执行通过
2020-04-20 17:17:44,692 -- [test_07testcase.py-->line:89] - INFO: 用例--author为空--执行通过
2020-04-20 17:17:45,385 -- [test_07testcase.py-->line:89] - INFO: 用例--author超过50字符--执行通过
2020-04-20 17:17:48,430 -- [Run_test.py-->line:22] - INFO: ---------------测试用例执行完毕,正在发送邮件-----------------------
2020-04-20 17:20:09,015 -- [Run_test.py-->line:7] - INFO: ---------------开始执行测试用例-----------------------
2020-04-20 17:20:10,522 -- [test_01register.py-->line:46] - ERROR: 用例--注册成功-用户名包含英文和数字--执行未通过
2020-04-20 17:20:10,523 -- [test_01register.py-->line:47] - DEBUG: 预期结果：{'username': 'fls530'}
2020-04-20 17:20:10,523 -- [test_01register.py-->line:48] - DEBUG: 实际结果：{'username': ['已存在一位使用该名字的用户。']}
2020-04-20 17:20:10,523 -- [test_01register.py-->line:49] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_01register.py", line 38, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 17:20:10,823 -- [test_01register.py-->line:46] - ERROR: 用例--注册成功-用户名包含中文--执行未通过
2020-04-20 17:20:10,824 -- [test_01register.py-->line:47] - DEBUG: 预期结果：{'username': 'fls530哈哈哈'}
2020-04-20 17:20:10,824 -- [test_01register.py-->line:48] - DEBUG: 实际结果：{'username': ['已存在一位使用该名字的用户。']}
2020-04-20 17:20:10,824 -- [test_01register.py-->line:49] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_01register.py", line 38, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 17:20:11,124 -- [test_01register.py-->line:54] - INFO: 用例--注册成功-用户名为纯英文--执行通过
2020-04-20 17:20:11,419 -- [test_01register.py-->line:54] - INFO: 用例--注册成功-用户名包含中文--执行通过
2020-04-20 17:20:11,711 -- [test_01register.py-->line:54] - INFO: 用例--已注册的用户名--执行通过
2020-04-20 17:20:12,010 -- [test_01register.py-->line:54] - INFO: 用例--已注册的邮箱--执行通过
2020-04-20 17:20:12,317 -- [test_01register.py-->line:54] - INFO: 用例--用户名小于6位--执行通过
2020-04-20 17:20:12,631 -- [test_01register.py-->line:54] - INFO: 用例--邮箱格式错误--执行通过
2020-04-20 17:20:12,932 -- [test_01register.py-->line:54] - INFO: 用例--用户名大于20位--执行通过
2020-04-20 17:20:13,230 -- [test_01register.py-->line:54] - INFO: 用例--密码小于6位--执行通过
2020-04-20 17:20:13,528 -- [test_01register.py-->line:54] - INFO: 用例--密码大于20位--执行通过
2020-04-20 17:20:13,822 -- [test_01register.py-->line:54] - INFO: 用例--两遍密码不一致--执行通过
2020-04-20 17:20:14,120 -- [test_01register.py-->line:46] - ERROR: 用例--密码为中文--执行未通过
2020-04-20 17:20:14,120 -- [test_01register.py-->line:47] - DEBUG: 预期结果：{'non_field_errors': ['两次输入密码不正确']}
2020-04-20 17:20:14,120 -- [test_01register.py-->line:48] - DEBUG: 实际结果：{'username': ['已存在一位使用该名字的用户。']}
2020-04-20 17:20:14,120 -- [test_01register.py-->line:49] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_01register.py", line 38, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 17:20:14,410 -- [test_01register.py-->line:46] - ERROR: 用例--确认密码为中文--执行未通过
2020-04-20 17:20:14,410 -- [test_01register.py-->line:47] - DEBUG: 预期结果：{'non_field_errors': ['两次输入密码不正确']}
2020-04-20 17:20:14,410 -- [test_01register.py-->line:48] - DEBUG: 实际结果：{'username': ['已存在一位使用该名字的用户。']}
2020-04-20 17:20:14,411 -- [test_01register.py-->line:49] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_01register.py", line 38, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 17:20:14,519 -- [test_03eamil.py-->line:39] - INFO: 用例--已注册用户名--执行通过
2020-04-20 17:20:14,625 -- [test_03eamil.py-->line:39] - INFO: 用例--未注册用户名--执行通过
2020-04-20 17:20:15,042 -- [test_04login.py-->line:39] - INFO: 用例--登录成功--执行通过
2020-04-20 17:20:15,150 -- [test_04login.py-->line:39] - INFO: 用例--用户名为空--执行通过
2020-04-20 17:20:15,251 -- [test_04login.py-->line:39] - INFO: 用例--密码为空--执行通过
2020-04-20 17:20:15,487 -- [test_04login.py-->line:39] - INFO: 用例--用户名未注册--执行通过
2020-04-20 17:20:15,709 -- [test_04login.py-->line:39] - INFO: 用例--密码错误--执行通过
2020-04-20 17:20:15,992 -- [test_04login.py-->line:39] - INFO: 用例--用户名格式错误--执行通过
2020-04-20 17:20:16,628 -- [test_05projects.py-->line:69] - INFO: 用例--创建项目成功--执行通过
2020-04-20 17:20:16,745 -- [test_05projects.py-->line:69] - INFO: 用例--创建已存在项目--执行通过
2020-04-20 17:20:16,864 -- [test_05projects.py-->line:69] - INFO: 用例--创建项目名称为空--执行通过
2020-04-20 17:20:16,988 -- [test_05projects.py-->line:69] - INFO: 用例--创建项目名称超过200字符--执行通过
2020-04-20 17:20:17,101 -- [test_05projects.py-->line:69] - INFO: 用例--leader为空--执行通过
2020-04-20 17:20:17,231 -- [test_05projects.py-->line:69] - INFO: 用例--leader超过50字符--执行通过
2020-04-20 17:20:17,346 -- [test_05projects.py-->line:69] - INFO: 用例--tester为空--执行通过
2020-04-20 17:20:17,487 -- [test_05projects.py-->line:69] - INFO: 用例--tester超过50字符--执行通过
2020-04-20 17:20:17,601 -- [test_05projects.py-->line:69] - INFO: 用例--programmer为空--执行通过
2020-04-20 17:20:17,711 -- [test_05projects.py-->line:69] - INFO: 用例--programmer超过50字符--执行通过
2020-04-20 17:20:17,819 -- [test_05projects.py-->line:69] - INFO: 用例--publish_app为空--执行通过
2020-04-20 17:20:17,933 -- [test_05projects.py-->line:69] - INFO: 用例--publish_app超过100字符--执行通过
2020-04-20 17:20:18,050 -- [test_05projects.py-->line:61] - ERROR: 用例--传desc--执行未通过
2020-04-20 17:20:18,050 -- [test_05projects.py-->line:62] - DEBUG: 预期结果：{'desc': 'XXX'}
2020-04-20 17:20:18,050 -- [test_05projects.py-->line:63] - DEBUG: 实际结果：{'name': ['具有 项目名称 的 项目信息 已存在。']}
2020-04-20 17:20:18,050 -- [test_05projects.py-->line:64] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_05projects.py", line 55, in test_project
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 17:20:18,162 -- [test_05projects.py-->line:61] - ERROR: 用例--不传desc--执行未通过
2020-04-20 17:20:18,163 -- [test_05projects.py-->line:62] - DEBUG: 预期结果：{'name': 'fls44007'}
2020-04-20 17:20:18,163 -- [test_05projects.py-->line:63] - DEBUG: 实际结果：{'name': ['具有 项目名称 的 项目信息 已存在。']}
2020-04-20 17:20:18,163 -- [test_05projects.py-->line:64] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_05projects.py", line 55, in test_project
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 17:20:19,018 -- [test_06interface.py-->line:81] - INFO: 用例--创建接口成功--执行通过
2020-04-20 17:20:19,415 -- [test_06interface.py-->line:81] - INFO: 用例--创建接口名称为空--执行通过
2020-04-20 17:20:19,904 -- [test_06interface.py-->line:81] - INFO: 用例--接口名称已存在--执行通过
2020-04-20 17:20:20,314 -- [test_06interface.py-->line:81] - INFO: 用例--tester为空--执行通过
2020-04-20 17:20:20,747 -- [test_06interface.py-->line:81] - INFO: 用例--tester超过50字符--执行通过
2020-04-20 17:20:21,150 -- [test_06interface.py-->line:81] - INFO: 用例--project_id为空--执行通过
2020-04-20 17:20:21,545 -- [test_06interface.py-->line:73] - ERROR: 用例--project_id不存在--执行未通过
2020-04-20 17:20:21,545 -- [test_06interface.py-->line:74] - DEBUG: 预期结果：{'project_id': ['项目id不存在。']}
2020-04-20 17:20:21,545 -- [test_06interface.py-->line:75] - DEBUG: 实际结果：{'project_id': ['无效主键 “111111” － 对象不存在。']}
2020-04-20 17:20:21,545 -- [test_06interface.py-->line:76] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_06interface.py", line 67, in test_interface
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 17:20:21,955 -- [test_06interface.py-->line:81] - INFO: 用例--传desc--执行通过
2020-04-20 17:20:22,381 -- [test_06interface.py-->line:81] - INFO: 用例--不传desc--执行通过
2020-04-20 17:20:23,383 -- [test_07testcase.py-->line:89] - INFO: 用例--创建用例成功--执行通过
2020-04-20 17:20:23,974 -- [test_07testcase.py-->line:89] - INFO: 用例--用例名称已存在--执行通过
2020-04-20 17:20:24,564 -- [test_07testcase.py-->line:89] - INFO: 用例--用例名称为空--执行通过
2020-04-20 17:20:25,180 -- [test_07testcase.py-->line:89] - INFO: 用例--interface为字符串类型--执行通过
2020-04-20 17:20:25,775 -- [test_07testcase.py-->line:89] - INFO: 用例--interface为整形--执行通过
2020-04-20 17:20:26,377 -- [test_07testcase.py-->line:89] - INFO: 用例--interface为空字典--执行通过
2020-04-20 17:20:26,994 -- [test_07testcase.py-->line:81] - ERROR: 用例--pid和iid为字符串--执行未通过
2020-04-20 17:20:26,994 -- [test_07testcase.py-->line:82] - DEBUG: 预期结果：{'interface': {'iid': ['该字段必须int。'], 'pid': ['该字段必须是int。']}}
2020-04-20 17:20:26,994 -- [test_07testcase.py-->line:83] - DEBUG: 实际结果：{'id': 2102, 'name': 'case06918', 'interface': {'name': 'inter19083', 'project': 'pro46050'}, 'author': 'fls530'}
2020-04-20 17:20:26,994 -- [test_07testcase.py-->line:84] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_07testcase.py", line 75, in test_testcase
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 17:20:27,597 -- [test_07testcase.py-->line:89] - INFO: 用例--pid不存在--执行通过
2020-04-20 17:20:28,209 -- [test_07testcase.py-->line:89] - INFO: 用例--iid不存在--执行通过
2020-04-20 17:20:28,811 -- [test_07testcase.py-->line:89] - INFO: 用例--pid和iid不关联--执行通过
2020-04-20 17:20:29,529 -- [test_07testcase.py-->line:89] - INFO: 用例--author为空--执行通过
2020-04-20 17:20:30,268 -- [test_07testcase.py-->line:89] - INFO: 用例--author超过50字符--执行通过
2020-04-20 17:20:32,168 -- [Run_test.py-->line:22] - INFO: ---------------测试用例执行完毕,正在发送邮件-----------------------
2020-04-20 17:22:52,229 -- [Run_test.py-->line:7] - INFO: ---------------开始执行测试用例-----------------------
2020-04-20 17:22:53,261 -- [test_01register.py-->line:46] - ERROR: 用例--注册成功-用户名包含英文和数字--执行未通过
2020-04-20 17:22:53,261 -- [test_01register.py-->line:47] - DEBUG: 预期结果：{'username': 'fls530'}
2020-04-20 17:22:53,261 -- [test_01register.py-->line:48] - DEBUG: 实际结果：{'username': ['已存在一位使用该名字的用户。']}
2020-04-20 17:22:53,261 -- [test_01register.py-->line:49] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_01register.py", line 38, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 17:22:53,550 -- [test_01register.py-->line:46] - ERROR: 用例--注册成功-用户名包含中文--执行未通过
2020-04-20 17:22:53,550 -- [test_01register.py-->line:47] - DEBUG: 预期结果：{'username': 'fls530哈哈哈'}
2020-04-20 17:22:53,551 -- [test_01register.py-->line:48] - DEBUG: 实际结果：{'username': ['已存在一位使用该名字的用户。']}
2020-04-20 17:22:53,551 -- [test_01register.py-->line:49] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_01register.py", line 38, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 17:22:53,842 -- [test_01register.py-->line:54] - INFO: 用例--注册成功-用户名为纯英文--执行通过
2020-04-20 17:22:54,144 -- [test_01register.py-->line:54] - INFO: 用例--注册成功-用户名包含中文--执行通过
2020-04-20 17:22:54,444 -- [test_01register.py-->line:54] - INFO: 用例--已注册的用户名--执行通过
2020-04-20 17:22:54,767 -- [test_01register.py-->line:54] - INFO: 用例--已注册的邮箱--执行通过
2020-04-20 17:22:55,375 -- [test_01register.py-->line:54] - INFO: 用例--用户名小于6位--执行通过
2020-04-20 17:22:55,672 -- [test_01register.py-->line:54] - INFO: 用例--邮箱格式错误--执行通过
2020-04-20 17:22:55,975 -- [test_01register.py-->line:54] - INFO: 用例--用户名大于20位--执行通过
2020-04-20 17:22:56,274 -- [test_01register.py-->line:54] - INFO: 用例--密码小于6位--执行通过
2020-04-20 17:22:56,561 -- [test_01register.py-->line:54] - INFO: 用例--密码大于20位--执行通过
2020-04-20 17:22:56,859 -- [test_01register.py-->line:54] - INFO: 用例--两遍密码不一致--执行通过
2020-04-20 17:22:57,159 -- [test_01register.py-->line:46] - ERROR: 用例--密码为中文--执行未通过
2020-04-20 17:22:57,159 -- [test_01register.py-->line:47] - DEBUG: 预期结果：{'non_field_errors': ['两次输入密码不正确']}
2020-04-20 17:22:57,159 -- [test_01register.py-->line:48] - DEBUG: 实际结果：{'username': ['已存在一位使用该名字的用户。']}
2020-04-20 17:22:57,159 -- [test_01register.py-->line:49] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_01register.py", line 38, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 17:22:57,451 -- [test_01register.py-->line:46] - ERROR: 用例--确认密码为中文--执行未通过
2020-04-20 17:22:57,451 -- [test_01register.py-->line:47] - DEBUG: 预期结果：{'non_field_errors': ['两次输入密码不正确']}
2020-04-20 17:22:57,452 -- [test_01register.py-->line:48] - DEBUG: 实际结果：{'username': ['已存在一位使用该名字的用户。']}
2020-04-20 17:22:57,452 -- [test_01register.py-->line:49] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_01register.py", line 38, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 17:22:57,557 -- [test_03eamil.py-->line:41] - INFO: 用例--已注册用户名--执行通过
2020-04-20 17:22:57,680 -- [test_03eamil.py-->line:41] - INFO: 用例--未注册用户名--执行通过
2020-04-20 17:22:58,125 -- [test_04login.py-->line:39] - INFO: 用例--登录成功--执行通过
2020-04-20 17:22:58,248 -- [test_04login.py-->line:39] - INFO: 用例--用户名为空--执行通过
2020-04-20 17:22:58,360 -- [test_04login.py-->line:39] - INFO: 用例--密码为空--执行通过
2020-04-20 17:22:58,594 -- [test_04login.py-->line:39] - INFO: 用例--用户名未注册--执行通过
2020-04-20 17:22:58,821 -- [test_04login.py-->line:39] - INFO: 用例--密码错误--执行通过
2020-04-20 17:22:59,105 -- [test_04login.py-->line:39] - INFO: 用例--用户名格式错误--执行通过
2020-04-20 17:22:59,732 -- [test_05projects.py-->line:69] - INFO: 用例--创建项目成功--执行通过
2020-04-20 17:22:59,849 -- [test_05projects.py-->line:69] - INFO: 用例--创建已存在项目--执行通过
2020-04-20 17:22:59,968 -- [test_05projects.py-->line:69] - INFO: 用例--创建项目名称为空--执行通过
2020-04-20 17:23:00,084 -- [test_05projects.py-->line:69] - INFO: 用例--创建项目名称超过200字符--执行通过
2020-04-20 17:23:00,201 -- [test_05projects.py-->line:69] - INFO: 用例--leader为空--执行通过
2020-04-20 17:23:00,318 -- [test_05projects.py-->line:69] - INFO: 用例--leader超过50字符--执行通过
2020-04-20 17:23:00,431 -- [test_05projects.py-->line:69] - INFO: 用例--tester为空--执行通过
2020-04-20 17:23:00,543 -- [test_05projects.py-->line:69] - INFO: 用例--tester超过50字符--执行通过
2020-04-20 17:23:00,663 -- [test_05projects.py-->line:69] - INFO: 用例--programmer为空--执行通过
2020-04-20 17:23:00,779 -- [test_05projects.py-->line:69] - INFO: 用例--programmer超过50字符--执行通过
2020-04-20 17:23:00,912 -- [test_05projects.py-->line:69] - INFO: 用例--publish_app为空--执行通过
2020-04-20 17:23:01,026 -- [test_05projects.py-->line:69] - INFO: 用例--publish_app超过100字符--执行通过
2020-04-20 17:23:01,141 -- [test_05projects.py-->line:61] - ERROR: 用例--传desc--执行未通过
2020-04-20 17:23:01,141 -- [test_05projects.py-->line:62] - DEBUG: 预期结果：{'desc': 'XXX'}
2020-04-20 17:23:01,141 -- [test_05projects.py-->line:63] - DEBUG: 实际结果：{'name': ['具有 项目名称 的 项目信息 已存在。']}
2020-04-20 17:23:01,142 -- [test_05projects.py-->line:64] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_05projects.py", line 55, in test_project
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 17:23:01,261 -- [test_05projects.py-->line:61] - ERROR: 用例--不传desc--执行未通过
2020-04-20 17:23:01,262 -- [test_05projects.py-->line:62] - DEBUG: 预期结果：{'name': 'fls05332'}
2020-04-20 17:23:01,262 -- [test_05projects.py-->line:63] - DEBUG: 实际结果：{'name': ['具有 项目名称 的 项目信息 已存在。']}
2020-04-20 17:23:01,262 -- [test_05projects.py-->line:64] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_05projects.py", line 55, in test_project
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 17:23:03,141 -- [test_06interface.py-->line:81] - INFO: 用例--创建接口成功--执行通过
2020-04-20 17:23:03,552 -- [test_06interface.py-->line:81] - INFO: 用例--创建接口名称为空--执行通过
2020-04-20 17:23:03,968 -- [test_06interface.py-->line:81] - INFO: 用例--接口名称已存在--执行通过
2020-04-20 17:23:04,371 -- [test_06interface.py-->line:81] - INFO: 用例--tester为空--执行通过
2020-04-20 17:23:04,766 -- [test_06interface.py-->line:81] - INFO: 用例--tester超过50字符--执行通过
2020-04-20 17:23:05,172 -- [test_06interface.py-->line:81] - INFO: 用例--project_id为空--执行通过
2020-04-20 17:23:05,591 -- [test_06interface.py-->line:73] - ERROR: 用例--project_id不存在--执行未通过
2020-04-20 17:23:05,592 -- [test_06interface.py-->line:74] - DEBUG: 预期结果：{'project_id': ['项目id不存在。']}
2020-04-20 17:23:05,592 -- [test_06interface.py-->line:75] - DEBUG: 实际结果：{'project_id': ['无效主键 “111111” － 对象不存在。']}
2020-04-20 17:23:05,592 -- [test_06interface.py-->line:76] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_06interface.py", line 67, in test_interface
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 17:23:05,994 -- [test_06interface.py-->line:81] - INFO: 用例--传desc--执行通过
2020-04-20 17:23:06,399 -- [test_06interface.py-->line:81] - INFO: 用例--不传desc--执行通过
2020-04-20 17:23:07,402 -- [test_07testcase.py-->line:89] - INFO: 用例--创建用例成功--执行通过
2020-04-20 17:23:08,013 -- [test_07testcase.py-->line:89] - INFO: 用例--用例名称已存在--执行通过
2020-04-20 17:23:08,656 -- [test_07testcase.py-->line:89] - INFO: 用例--用例名称为空--执行通过
2020-04-20 17:23:09,247 -- [test_07testcase.py-->line:89] - INFO: 用例--interface为字符串类型--执行通过
2020-04-20 17:23:09,838 -- [test_07testcase.py-->line:89] - INFO: 用例--interface为整形--执行通过
2020-04-20 17:23:10,466 -- [test_07testcase.py-->line:89] - INFO: 用例--interface为空字典--执行通过
2020-04-20 17:23:11,097 -- [test_07testcase.py-->line:81] - ERROR: 用例--pid和iid为字符串--执行未通过
2020-04-20 17:23:11,098 -- [test_07testcase.py-->line:82] - DEBUG: 预期结果：{'interface': {'iid': ['该字段必须int。'], 'pid': ['该字段必须是int。']}}
2020-04-20 17:23:11,098 -- [test_07testcase.py-->line:83] - DEBUG: 实际结果：{'id': 2104, 'name': 'case56294', 'interface': {'name': 'inter66521', 'project': 'pro75069'}, 'author': 'fls530'}
2020-04-20 17:23:11,098 -- [test_07testcase.py-->line:84] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_07testcase.py", line 75, in test_testcase
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 17:23:11,772 -- [test_07testcase.py-->line:89] - INFO: 用例--pid不存在--执行通过
2020-04-20 17:23:12,420 -- [test_07testcase.py-->line:89] - INFO: 用例--iid不存在--执行通过
2020-04-20 17:23:13,046 -- [test_07testcase.py-->line:89] - INFO: 用例--pid和iid不关联--执行通过
2020-04-20 17:23:13,734 -- [test_07testcase.py-->line:89] - INFO: 用例--author为空--执行通过
2020-04-20 17:23:14,348 -- [test_07testcase.py-->line:89] - INFO: 用例--author超过50字符--执行通过
2020-04-20 17:23:16,215 -- [Run_test.py-->line:22] - INFO: ---------------测试用例执行完毕,正在发送邮件-----------------------
2020-04-20 17:33:50,271 -- [Run_test.py-->line:7] - INFO: ---------------开始执行测试用例-----------------------
2020-04-20 17:33:51,380 -- [test_01register.py-->line:46] - ERROR: 用例--注册成功-用户名包含英文和数字--执行未通过
2020-04-20 17:33:51,380 -- [test_01register.py-->line:47] - DEBUG: 预期结果：{'username': 'fls530'}
2020-04-20 17:33:51,381 -- [test_01register.py-->line:48] - DEBUG: 实际结果：{'username': ['已存在一位使用该名字的用户。']}
2020-04-20 17:33:51,381 -- [test_01register.py-->line:49] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_01register.py", line 38, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 17:33:51,683 -- [test_01register.py-->line:46] - ERROR: 用例--注册成功-用户名包含中文--执行未通过
2020-04-20 17:33:51,683 -- [test_01register.py-->line:47] - DEBUG: 预期结果：{'username': 'fls530哈哈哈'}
2020-04-20 17:33:51,683 -- [test_01register.py-->line:48] - DEBUG: 实际结果：{'username': ['已存在一位使用该名字的用户。']}
2020-04-20 17:33:51,683 -- [test_01register.py-->line:49] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_01register.py", line 38, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 17:33:51,985 -- [test_01register.py-->line:55] - INFO: 用例--注册成功-用户名为纯英文--执行通过
2020-04-20 17:33:52,284 -- [test_01register.py-->line:55] - INFO: 用例--注册成功-用户名包含中文--执行通过
2020-04-20 17:33:52,580 -- [test_01register.py-->line:55] - INFO: 用例--已注册的用户名--执行通过
2020-04-20 17:33:52,874 -- [test_01register.py-->line:55] - INFO: 用例--已注册的邮箱--执行通过
2020-04-20 17:33:53,172 -- [test_01register.py-->line:55] - INFO: 用例--用户名小于6位--执行通过
2020-04-20 17:33:53,464 -- [test_01register.py-->line:55] - INFO: 用例--邮箱格式错误--执行通过
2020-04-20 17:33:53,755 -- [test_01register.py-->line:55] - INFO: 用例--用户名大于20位--执行通过
2020-04-20 17:33:54,046 -- [test_01register.py-->line:55] - INFO: 用例--密码小于6位--执行通过
2020-04-20 17:33:54,345 -- [test_01register.py-->line:55] - INFO: 用例--密码大于20位--执行通过
2020-04-20 17:33:54,634 -- [test_01register.py-->line:55] - INFO: 用例--两遍密码不一致--执行通过
2020-04-20 17:33:54,936 -- [test_01register.py-->line:46] - ERROR: 用例--密码为中文--执行未通过
2020-04-20 17:33:54,936 -- [test_01register.py-->line:47] - DEBUG: 预期结果：{'non_field_errors': ['两次输入密码不正确']}
2020-04-20 17:33:54,936 -- [test_01register.py-->line:48] - DEBUG: 实际结果：{'username': ['已存在一位使用该名字的用户。']}
2020-04-20 17:33:54,936 -- [test_01register.py-->line:49] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_01register.py", line 38, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 17:33:55,231 -- [test_01register.py-->line:46] - ERROR: 用例--确认密码为中文--执行未通过
2020-04-20 17:33:55,232 -- [test_01register.py-->line:47] - DEBUG: 预期结果：{'non_field_errors': ['两次输入密码不正确']}
2020-04-20 17:33:55,232 -- [test_01register.py-->line:48] - DEBUG: 实际结果：{'username': ['已存在一位使用该名字的用户。']}
2020-04-20 17:33:55,232 -- [test_01register.py-->line:49] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_01register.py", line 38, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 17:33:55,337 -- [test_03eamil.py-->line:41] - INFO: 用例--已注册用户名--执行通过
2020-04-20 17:33:55,443 -- [test_03eamil.py-->line:41] - INFO: 用例--未注册用户名--执行通过
2020-04-20 17:33:55,864 -- [test_04login.py-->line:39] - INFO: 用例--登录成功--执行通过
2020-04-20 17:33:55,970 -- [test_04login.py-->line:39] - INFO: 用例--用户名为空--执行通过
2020-04-20 17:33:56,086 -- [test_04login.py-->line:39] - INFO: 用例--密码为空--执行通过
2020-04-20 17:33:56,315 -- [test_04login.py-->line:39] - INFO: 用例--用户名未注册--执行通过
2020-04-20 17:33:56,535 -- [test_04login.py-->line:39] - INFO: 用例--密码错误--执行通过
2020-04-20 17:33:56,755 -- [test_04login.py-->line:39] - INFO: 用例--用户名格式错误--执行通过
2020-04-20 17:33:57,366 -- [test_05projects.py-->line:69] - INFO: 用例--创建项目成功--执行通过
2020-04-20 17:34:02,386 -- [Run_test.py-->line:7] - INFO: ---------------开始执行测试用例-----------------------
2020-04-20 17:34:04,352 -- [Run_test.py-->line:22] - INFO: ---------------测试用例执行完毕,正在发送邮件-----------------------
2020-04-20 17:38:20,418 -- [Run_test.py-->line:7] - INFO: ---------------开始执行测试用例-----------------------
2020-04-20 17:38:21,542 -- [test_01register.py-->line:46] - ERROR: 用例--注册成功-用户名包含英文和数字--执行未通过
2020-04-20 17:38:21,542 -- [test_01register.py-->line:47] - DEBUG: 预期结果：{'username': 'fls530'}
2020-04-20 17:38:21,542 -- [test_01register.py-->line:48] - DEBUG: 实际结果：{'username': ['已存在一位使用该名字的用户。']}
2020-04-20 17:38:21,542 -- [test_01register.py-->line:49] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_01register.py", line 38, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 17:38:21,866 -- [test_01register.py-->line:46] - ERROR: 用例--注册成功-用户名包含中文--执行未通过
2020-04-20 17:38:21,867 -- [test_01register.py-->line:47] - DEBUG: 预期结果：{'username': 'fls530哈哈哈'}
2020-04-20 17:38:21,867 -- [test_01register.py-->line:48] - DEBUG: 实际结果：{'username': ['已存在一位使用该名字的用户。']}
2020-04-20 17:38:21,867 -- [test_01register.py-->line:49] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_01register.py", line 38, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 17:38:22,183 -- [test_01register.py-->line:55] - INFO: 用例--注册成功-用户名为纯英文--执行通过
2020-04-20 17:38:22,524 -- [test_01register.py-->line:55] - INFO: 用例--注册成功-用户名包含中文--执行通过
2020-04-20 17:38:22,836 -- [test_01register.py-->line:55] - INFO: 用例--已注册的用户名--执行通过
2020-04-20 17:38:23,146 -- [test_01register.py-->line:55] - INFO: 用例--已注册的邮箱--执行通过
2020-04-20 17:38:23,450 -- [test_01register.py-->line:55] - INFO: 用例--用户名小于6位--执行通过
2020-04-20 17:38:23,770 -- [test_01register.py-->line:55] - INFO: 用例--邮箱格式错误--执行通过
2020-04-20 17:38:24,076 -- [test_01register.py-->line:55] - INFO: 用例--用户名大于20位--执行通过
2020-04-20 17:38:24,378 -- [test_01register.py-->line:55] - INFO: 用例--密码小于6位--执行通过
2020-04-20 17:38:24,695 -- [test_01register.py-->line:55] - INFO: 用例--密码大于20位--执行通过
2020-04-20 17:38:25,029 -- [test_01register.py-->line:55] - INFO: 用例--两遍密码不一致--执行通过
2020-04-20 17:38:25,343 -- [test_01register.py-->line:46] - ERROR: 用例--密码为中文--执行未通过
2020-04-20 17:38:25,344 -- [test_01register.py-->line:47] - DEBUG: 预期结果：{'non_field_errors': ['两次输入密码不正确']}
2020-04-20 17:38:25,344 -- [test_01register.py-->line:48] - DEBUG: 实际结果：{'username': ['已存在一位使用该名字的用户。']}
2020-04-20 17:38:25,345 -- [test_01register.py-->line:49] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_01register.py", line 38, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 17:38:25,665 -- [test_01register.py-->line:46] - ERROR: 用例--确认密码为中文--执行未通过
2020-04-20 17:38:25,665 -- [test_01register.py-->line:47] - DEBUG: 预期结果：{'non_field_errors': ['两次输入密码不正确']}
2020-04-20 17:38:25,665 -- [test_01register.py-->line:48] - DEBUG: 实际结果：{'username': ['已存在一位使用该名字的用户。']}
2020-04-20 17:38:25,665 -- [test_01register.py-->line:49] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_01register.py", line 38, in test_register
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 17:38:25,773 -- [test_03eamil.py-->line:41] - INFO: 用例--已注册用户名--执行通过
2020-04-20 17:38:25,883 -- [test_03eamil.py-->line:41] - INFO: 用例--未注册用户名--执行通过
2020-04-20 17:38:26,294 -- [test_04login.py-->line:39] - INFO: 用例--登录成功--执行通过
2020-04-20 17:38:26,408 -- [test_04login.py-->line:39] - INFO: 用例--用户名为空--执行通过
2020-04-20 17:38:26,558 -- [test_04login.py-->line:39] - INFO: 用例--密码为空--执行通过
2020-04-20 17:38:26,798 -- [test_04login.py-->line:39] - INFO: 用例--用户名未注册--执行通过
2020-04-20 17:38:27,033 -- [test_04login.py-->line:39] - INFO: 用例--密码错误--执行通过
2020-04-20 17:38:27,274 -- [test_04login.py-->line:39] - INFO: 用例--用户名格式错误--执行通过
2020-04-20 17:38:27,712 -- [test_05projects.py-->line:61] - ERROR: 用例--创建已存在项目--执行未通过
2020-04-20 17:38:27,712 -- [test_05projects.py-->line:62] - DEBUG: 预期结果：{'name': ['具有 项目名称 的 项目信息 已存在。']}
2020-04-20 17:38:27,712 -- [test_05projects.py-->line:63] - DEBUG: 实际结果：{'id': 10914, 'create_time': '2020-04-20T17:38:20.206162+08:00', 'name': 'fls52493', 'leader': 'fls530', 'tester': 'fls530', 'programmer': 'fls530', 'publish_app': 'test', 'desc': 'test'}
2020-04-20 17:38:27,712 -- [test_05projects.py-->line:64] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_05projects.py", line 55, in test_project
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 17:38:27,829 -- [test_05projects.py-->line:69] - INFO: 用例--创建项目名称为空--执行通过
2020-04-20 17:38:27,941 -- [test_05projects.py-->line:69] - INFO: 用例--创建项目名称超过200字符--执行通过
2020-04-20 17:38:28,062 -- [test_05projects.py-->line:61] - ERROR: 用例--leader为空--执行未通过
2020-04-20 17:38:28,062 -- [test_05projects.py-->line:62] - DEBUG: 预期结果：{'leader': ['该字段不能为空。']}
2020-04-20 17:38:28,063 -- [test_05projects.py-->line:63] - DEBUG: 实际结果：{'name': ['具有 项目名称 的 项目信息 已存在。']}
2020-04-20 17:38:28,063 -- [test_05projects.py-->line:64] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_05projects.py", line 55, in test_project
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 17:38:28,189 -- [test_05projects.py-->line:69] - INFO: 用例--leader超过50字符--执行通过
2020-04-20 17:38:28,301 -- [test_05projects.py-->line:69] - INFO: 用例--tester为空--执行通过
2020-04-20 17:38:28,425 -- [test_05projects.py-->line:69] - INFO: 用例--tester超过50字符--执行通过
2020-04-20 17:38:28,538 -- [test_05projects.py-->line:69] - INFO: 用例--programmer为空--执行通过
2020-04-20 17:38:28,655 -- [test_05projects.py-->line:69] - INFO: 用例--programmer超过50字符--执行通过
2020-04-20 17:38:28,767 -- [test_05projects.py-->line:69] - INFO: 用例--publish_app为空--执行通过
2020-04-20 17:38:28,881 -- [test_05projects.py-->line:69] - INFO: 用例--publish_app超过100字符--执行通过
2020-04-20 17:38:29,000 -- [test_05projects.py-->line:61] - ERROR: 用例--传desc--执行未通过
2020-04-20 17:38:29,001 -- [test_05projects.py-->line:62] - DEBUG: 预期结果：{'desc': 'XXX'}
2020-04-20 17:38:29,001 -- [test_05projects.py-->line:63] - DEBUG: 实际结果：{'name': ['具有 项目名称 的 项目信息 已存在。']}
2020-04-20 17:38:29,001 -- [test_05projects.py-->line:64] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_05projects.py", line 55, in test_project
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 17:38:29,124 -- [test_05projects.py-->line:61] - ERROR: 用例--不传desc--执行未通过
2020-04-20 17:38:29,124 -- [test_05projects.py-->line:62] - DEBUG: 预期结果：{'desc': ''}
2020-04-20 17:38:29,124 -- [test_05projects.py-->line:63] - DEBUG: 实际结果：{'name': ['具有 项目名称 的 项目信息 已存在。']}
2020-04-20 17:38:29,124 -- [test_05projects.py-->line:64] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_05projects.py", line 55, in test_project
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 17:38:29,956 -- [test_06interface.py-->line:81] - INFO: 用例--创建接口成功--执行通过
2020-04-20 17:38:30,375 -- [test_06interface.py-->line:81] - INFO: 用例--创建接口名称为空--执行通过
2020-04-20 17:38:30,796 -- [test_06interface.py-->line:73] - ERROR: 用例--接口名称已存在--执行未通过
2020-04-20 17:38:30,797 -- [test_06interface.py-->line:74] - DEBUG: 预期结果：{'name': ['具有 接口名称 的 接口信息 已存在。']}
2020-04-20 17:38:30,797 -- [test_06interface.py-->line:75] - DEBUG: 实际结果：{'id': 6263, 'name': 'inter63567', 'tester': 'fls530', 'project': 'pro86666', 'project_id': 10917, 'desc': 'test', 'create_time': '2020-04-20T17:38:23.295220+08:00'}
2020-04-20 17:38:30,797 -- [test_06interface.py-->line:76] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_06interface.py", line 67, in test_interface
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 17:38:31,211 -- [test_06interface.py-->line:81] - INFO: 用例--tester为空--执行通过
2020-04-20 17:38:31,609 -- [test_06interface.py-->line:81] - INFO: 用例--tester超过50字符--执行通过
2020-04-20 17:38:32,027 -- [test_06interface.py-->line:81] - INFO: 用例--project_id为空--执行通过
2020-04-20 17:38:32,439 -- [test_06interface.py-->line:73] - ERROR: 用例--project_id不存在--执行未通过
2020-04-20 17:38:32,439 -- [test_06interface.py-->line:74] - DEBUG: 预期结果：{'project_id': ['项目id不存在。']}
2020-04-20 17:38:32,440 -- [test_06interface.py-->line:75] - DEBUG: 实际结果：{'project_id': ['无效主键 “111111” － 对象不存在。']}
2020-04-20 17:38:32,440 -- [test_06interface.py-->line:76] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_06interface.py", line 67, in test_interface
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 17:38:32,888 -- [test_06interface.py-->line:81] - INFO: 用例--传desc--执行通过
2020-04-20 17:38:33,319 -- [test_06interface.py-->line:73] - ERROR: 用例--不传desc--执行未通过
2020-04-20 17:38:33,319 -- [test_06interface.py-->line:74] - DEBUG: 预期结果：{'desc': ''}
2020-04-20 17:38:33,320 -- [test_06interface.py-->line:75] - DEBUG: 实际结果：{'id': 6266, 'name': 'inter13552', 'tester': 'fls530', 'project': 'pro43005', 'project_id': 10923, 'desc': None, 'create_time': '2020-04-20T17:38:25.814833+08:00'}
2020-04-20 17:38:33,320 -- [test_06interface.py-->line:76] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_06interface.py", line 67, in test_interface
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 17:38:34,357 -- [test_07testcase.py-->line:89] - INFO: 用例--创建用例成功--执行通过
2020-04-20 17:38:34,985 -- [test_07testcase.py-->line:89] - INFO: 用例--用例名称已存在--执行通过
2020-04-20 17:38:35,615 -- [test_07testcase.py-->line:89] - INFO: 用例--用例名称为空--执行通过
2020-04-20 17:38:36,515 -- [test_07testcase.py-->line:89] - INFO: 用例--interface为字符串类型--执行通过
2020-04-20 17:38:37,142 -- [test_07testcase.py-->line:89] - INFO: 用例--interface为整形--执行通过
2020-04-20 17:38:37,770 -- [test_07testcase.py-->line:89] - INFO: 用例--interface为空字典--执行通过
2020-04-20 17:38:38,447 -- [test_07testcase.py-->line:81] - ERROR: 用例--pid和iid为字符串--执行未通过
2020-04-20 17:38:38,447 -- [test_07testcase.py-->line:82] - DEBUG: 预期结果：{'interface': {'iid': ['该字段必须int。'], 'pid': ['该字段必须是int。']}}
2020-04-20 17:38:38,448 -- [test_07testcase.py-->line:83] - DEBUG: 实际结果：{'id': 2106, 'name': 'case83870', 'interface': {'name': 'inter57446', 'project': 'pro12734'}, 'author': 'fls530'}
2020-04-20 17:38:38,448 -- [test_07testcase.py-->line:84] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_07testcase.py", line 75, in test_testcase
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 17:38:39,073 -- [test_07testcase.py-->line:89] - INFO: 用例--pid不存在--执行通过
2020-04-20 17:38:39,703 -- [test_07testcase.py-->line:89] - INFO: 用例--iid不存在--执行通过
2020-04-20 17:38:40,345 -- [test_07testcase.py-->line:89] - INFO: 用例--pid和iid不关联--执行通过
2020-04-20 17:38:40,967 -- [test_07testcase.py-->line:89] - INFO: 用例--author为空--执行通过
2020-04-20 17:38:41,604 -- [test_07testcase.py-->line:89] - INFO: 用例--author超过50字符--执行通过
2020-04-20 17:38:42,787 -- [Run_test.py-->line:22] - INFO: ---------------测试用例执行完毕,正在发送邮件-----------------------
2020-04-20 22:12:43,408 -- [test_05projects.py-->line:45] - ERROR: 用例--创建已存在项目--执行未通过
2020-04-20 22:12:43,408 -- [test_05projects.py-->line:46] - DEBUG: 预期结果：{'name': ['具有 项目名称 的 项目信息 已存在。']}
2020-04-20 22:12:43,409 -- [test_05projects.py-->line:47] - DEBUG: 实际结果：{'id': 11075, 'create_time': '2020-04-20T22:12:43.180988+08:00', 'name': 'fls13107', 'leader': 'fls530', 'tester': 'fls530', 'programmer': 'fls530', 'publish_app': 'test', 'desc': 'test'}
2020-04-20 22:12:43,409 -- [test_05projects.py-->line:48] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_05projects.py", line 39, in test_project
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 22:12:43,896 -- [test_05projects.py-->line:53] - INFO: 用例--创建项目名称为空--执行通过
2020-04-20 22:12:44,422 -- [test_05projects.py-->line:53] - INFO: 用例--创建项目名称超过200字符--执行通过
2020-04-20 22:12:44,889 -- [test_05projects.py-->line:45] - ERROR: 用例--leader为空--执行未通过
2020-04-20 22:12:44,889 -- [test_05projects.py-->line:46] - DEBUG: 预期结果：{'leader': ['该字段不能为空。']}
2020-04-20 22:12:44,889 -- [test_05projects.py-->line:47] - DEBUG: 实际结果：{'id': 11076, 'create_time': '2020-04-20T22:12:44.660258+08:00', 'name': 'fls19716', 'leader': 'fls530', 'tester': 'fls530', 'programmer': 'fls530', 'publish_app': 'test', 'desc': 'test'}
2020-04-20 22:12:44,890 -- [test_05projects.py-->line:48] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_05projects.py", line 39, in test_project
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 22:12:45,406 -- [test_05projects.py-->line:53] - INFO: 用例--leader超过50字符--执行通过
2020-04-20 22:12:45,886 -- [test_05projects.py-->line:53] - INFO: 用例--tester为空--执行通过
2020-04-20 22:12:46,349 -- [test_05projects.py-->line:53] - INFO: 用例--tester超过50字符--执行通过
2020-04-20 22:12:46,820 -- [test_05projects.py-->line:53] - INFO: 用例--programmer为空--执行通过
2020-04-20 22:12:47,315 -- [test_05projects.py-->line:53] - INFO: 用例--programmer超过50字符--执行通过
2020-04-20 22:12:47,778 -- [test_05projects.py-->line:53] - INFO: 用例--publish_app为空--执行通过
2020-04-20 22:12:48,246 -- [test_05projects.py-->line:53] - INFO: 用例--publish_app超过100字符--执行通过
2020-04-20 22:12:48,708 -- [test_05projects.py-->line:53] - INFO: 用例--传desc--执行通过
2020-04-20 22:12:49,181 -- [test_05projects.py-->line:53] - INFO: 用例--不传desc--执行通过
2020-04-20 22:15:51,881 -- [test_05projects.py-->line:45] - ERROR: 用例--创建已存在项目--执行未通过
2020-04-20 22:15:51,882 -- [test_05projects.py-->line:46] - DEBUG: 预期结果：{'name': ['具有 项目名称 的 项目信息 已存在。']}
2020-04-20 22:15:51,882 -- [test_05projects.py-->line:47] - DEBUG: 实际结果：{'id': 11083, 'create_time': '2020-04-20T22:15:51.653744+08:00', 'name': 'fls09545', 'leader': 'fls530', 'tester': 'fls530', 'programmer': 'fls530', 'publish_app': 'test', 'desc': 'test'}
2020-04-20 22:15:51,882 -- [test_05projects.py-->line:48] - ERROR: 断言不通过
Traceback (most recent call last):
  File "C:\Users\Administrator\Desktop\interfacetest\TestCases\test_05projects.py", line 39, in test_project
    assert_dict(expected, res)
  File "C:\Users\Administrator\Desktop\interfacetest\Common\handle_assert.py", line 14, in assert_dict
    raise AssertionError("断言不通过")
AssertionError: 断言不通过
2020-04-20 22:15:52,374 -- [test_05projects.py-->line:53] - INFO: 用例--创建项目名称为空--执行通过
2020-04-20 22:15:52,889 -- [test_05projects.py-->line:53] - INFO: 用例--创建项目名称超过200字符--执行通过
2020-04-20 22:15:53,344 -- [test_05projects.py-->line:53] - INFO: 用例--leader为空--执行通过
2020-04-20 22:15:53,825 -- [test_05projects.py-->line:53] - INFO: 用例--leader超过50字符--执行通过
2020-04-20 22:15:54,279 -- [test_05projects.py-->line:53] - INFO: 用例--tester为空--执行通过
2020-04-20 22:15:54,745 -- [test_05projects.py-->line:53] - INFO: 用例--tester超过50字符--执行通过
2020-04-20 22:15:55,207 -- [test_05projects.py-->line:53] - INFO: 用例--programmer为空--执行通过
2020-04-20 22:15:55,673 -- [test_05projects.py-->line:53] - INFO: 用例--programmer超过50字符--执行通过
2020-04-20 22:15:56,132 -- [test_05projects.py-->line:53] - INFO: 用例--publish_app为空--执行通过
2020-04-20 22:15:56,609 -- [test_05projects.py-->line:53] - INFO: 用例--publish_app超过100字符--执行通过
2020-04-20 22:15:57,073 -- [test_05projects.py-->line:53] - INFO: 用例--传desc--执行通过
2020-04-20 22:15:57,545 -- [test_05projects.py-->line:53] - INFO: 用例--不传desc--执行通过
2020-04-20 22:16:35,466 -- [test_05projects.py-->line:53] - INFO: 用例--创建已存在项目--执行通过
2020-04-20 22:16:35,936 -- [test_05projects.py-->line:53] - INFO: 用例--创建项目名称为空--执行通过
2020-04-20 22:16:36,451 -- [test_05projects.py-->line:53] - INFO: 用例--创建项目名称超过200字符--执行通过
2020-04-20 22:16:37,331 -- [test_05projects.py-->line:53] - INFO: 用例--leader为空--执行通过
2020-04-20 22:16:37,793 -- [test_05projects.py-->line:53] - INFO: 用例--leader超过50字符--执行通过
2020-04-20 22:16:38,258 -- [test_05projects.py-->line:53] - INFO: 用例--tester为空--执行通过
2020-04-20 22:16:38,753 -- [test_05projects.py-->line:53] - INFO: 用例--tester超过50字符--执行通过
2020-04-20 22:16:39,215 -- [test_05projects.py-->line:53] - INFO: 用例--programmer为空--执行通过
2020-04-20 22:16:39,670 -- [test_05projects.py-->line:53] - INFO: 用例--programmer超过50字符--执行通过
2020-04-20 22:16:40,591 -- [test_05projects.py-->line:53] - INFO: 用例--publish_app为空--执行通过
2020-04-20 22:16:41,047 -- [test_05projects.py-->line:53] - INFO: 用例--publish_app超过100字符--执行通过
2020-04-20 22:16:41,526 -- [test_05projects.py-->line:53] - INFO: 用例--传desc--执行通过
2020-04-20 22:16:41,990 -- [test_05projects.py-->line:53] - INFO: 用例--不传desc--执行通过
2020-04-20 22:19:03,224 -- [test_05projects.py-->line:53] - INFO: 用例--创建已存在项目--执行通过
2020-04-20 22:19:03,680 -- [test_05projects.py-->line:53] - INFO: 用例--创建项目名称为空--执行通过
2020-04-20 22:19:04,165 -- [test_05projects.py-->line:53] - INFO: 用例--创建项目名称超过200字符--执行通过
2020-04-20 22:19:04,669 -- [test_05projects.py-->line:53] - INFO: 用例--leader为空--执行通过
2020-04-20 22:19:05,137 -- [test_05projects.py-->line:53] - INFO: 用例--leader超过50字符--执行通过
2020-04-20 22:19:05,610 -- [test_05projects.py-->line:53] - INFO: 用例--tester为空--执行通过
2020-04-20 22:19:06,072 -- [test_05projects.py-->line:53] - INFO: 用例--tester超过50字符--执行通过
2020-04-20 22:19:06,596 -- [test_05projects.py-->line:53] - INFO: 用例--programmer为空--执行通过
2020-04-20 22:19:07,050 -- [test_05projects.py-->line:53] - INFO: 用例--programmer超过50字符--执行通过
2020-04-20 22:19:07,509 -- [test_05projects.py-->line:53] - INFO: 用例--publish_app为空--执行通过
2020-04-20 22:19:07,958 -- [test_05projects.py-->line:53] - INFO: 用例--publish_app超过100字符--执行通过
2020-04-20 22:19:08,432 -- [test_05projects.py-->line:53] - INFO: 用例--传desc--执行通过
2020-04-20 22:19:08,904 -- [test_05projects.py-->line:53] - INFO: 用例--不传desc--执行通过
2020-04-20 22:23:48,334 -- [test_05projects.py-->line:53] - INFO: 用例--创建项目成功--执行通过
2020-04-20 22:23:48,803 -- [test_05projects.py-->line:53] - INFO: 用例--创建已存在项目--执行通过
2020-04-20 22:23:49,269 -- [test_05projects.py-->line:53] - INFO: 用例--创建项目名称为空--执行通过
2020-04-20 22:23:49,730 -- [test_05projects.py-->line:53] - INFO: 用例--创建项目名称超过200字符--执行通过
2020-04-20 22:23:50,211 -- [test_05projects.py-->line:53] - INFO: 用例--leader为空--执行通过
2020-04-20 22:23:50,680 -- [test_05projects.py-->line:53] - INFO: 用例--leader超过50字符--执行通过
2020-04-20 22:23:51,152 -- [test_05projects.py-->line:53] - INFO: 用例--tester为空--执行通过
2020-04-20 22:23:51,609 -- [test_05projects.py-->line:53] - INFO: 用例--tester超过50字符--执行通过
2020-04-20 22:23:52,086 -- [test_05projects.py-->line:53] - INFO: 用例--programmer为空--执行通过
2020-04-20 22:23:52,558 -- [test_05projects.py-->line:53] - INFO: 用例--programmer超过50字符--执行通过
2020-04-20 22:23:53,025 -- [test_05projects.py-->line:53] - INFO: 用例--publish_app为空--执行通过
2020-04-20 22:23:53,476 -- [test_05projects.py-->line:53] - INFO: 用例--publish_app超过100字符--执行通过
2020-04-20 22:23:53,942 -- [test_05projects.py-->line:53] - INFO: 用例--传desc--执行通过
2020-04-20 22:23:54,416 -- [test_05projects.py-->line:53] - INFO: 用例--不传desc--执行通过
